{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\IndividualProject\\\\StudentTeam\\\\EditStudentTeam.js\";\n\n/**\r\n * This component contains the pop-up for updating a student team.\r\n * It sits within an individual team card under the TeamPage within a ProjectById component.\r\n * Author: Reyna Tan\r\n * Date: 18/09/2019\r\n */\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport store from \"../../../../../store\";\nimport { grey } from \"@material-ui/core/colors\";\nimport TabContainer from \"react-bootstrap/TabContainer\";\nimport TabContent from \"react-bootstrap/TabContent\";\nimport TabPane from \"react-bootstrap/TabPane\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Nav from \"react-bootstrap/Nav\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport PropTypes from \"prop-types\";\nimport { updateProductAction, addNoteAction } from \"../../../../../store/actionCreators\";\n\nvar styles = function styles(theme) {\n  var _studentTeamHeader;\n\n  return {\n    root: {\n      flexGrow: 1,\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      outline: \"none\"\n    },\n    formControl: {\n      margin: 2,\n      minWidth: 120,\n      maxWidth: 300\n    },\n    fab: {\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\"\n      },\n      boxShadow: \"none\"\n    },\n    studentTeamHeader: (_studentTeamHeader = {\n      fontWeight: \"bold\"\n    }, _defineProperty(_studentTeamHeader, theme.breakpoints.up('sm'), {\n      paddingTop: 20\n    }), _defineProperty(_studentTeamHeader, theme.breakpoints.down('sm'), {\n      paddingTop: 5\n    }), _defineProperty(_studentTeamHeader, \"marginLeft\", 23), _studentTeamHeader),\n    selectField: {\n      marginTop: 15\n    },\n    resize: {\n      fontSize: 15,\n      padding: 10\n    },\n    saveButton: {\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    discardButton: {\n      color: \"#094183\"\n    },\n    editTeamButton: {\n      color: \"#094183\",\n      backgroundColor: grey[100]\n    }\n  };\n};\n\nvar NUM_ITEMS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP\n    }\n  },\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null,\n  dense: \"true\"\n};\n\nvar EditStudentTeam =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditStudentTeam, _React$Component);\n\n  function EditStudentTeam(props) {\n    var _this;\n\n    _classCallCheck(this, EditStudentTeam);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditStudentTeam).call(this, props));\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._handleNumStudentsChange = function (event) {\n      _this.setState({\n        numStudents: event.target.value\n      });\n    };\n\n    _this._handleNumProductLinksChange = function (event) {\n      _this.setState({\n        numProductLinks: event.target.value\n      });\n    };\n\n    _this._handleNumTechnologiesChange = function (event) {\n      _this.setState({\n        numTechnologies: event.target.value\n      });\n    };\n\n    _this._handleMetricChange = function (metricName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, metricName, event.target.checked));\n      };\n    };\n\n    _this._createRows = function (tableName) {\n      var number;\n\n      if (tableName === \"numStudents\") {\n        number = _this.state.numStudents;\n      } else if (tableName === \"numProductLinks\") {\n        number = _this.state.numProductLinks;\n      } else {\n        number = _this.state.numTechnologies;\n      }\n\n      var rows = [];\n\n      for (var i = 0; i < number; i++) {\n        var newObject = {\n          index: i\n        };\n        rows.push(newObject);\n      }\n\n      return rows;\n    };\n\n    _this._handleUpdateStudentTeam = function () {\n      var _this$state = _this.state,\n          numStudents = _this$state.numStudents,\n          numProductLinks = _this$state.numProductLinks,\n          numTechnologies = _this$state.numTechnologies,\n          deployed = _this$state.deployed,\n          activelyUsed = _this$state.activelyUsed;\n      var product = _this.props.product; // Compile student list\n\n      var studentList = [];\n\n      for (var i = 0; i < numStudents; i++) {\n        var name = document.getElementById(\"name\" + i).value;\n        var email = document.getElementById(\"email\" + i).value;\n        var nextStudent = {\n          name: name,\n          email: email\n        };\n        studentList.push(nextStudent);\n      } // Compile artefacts\n\n\n      var productLinksList = [];\n\n      for (var j = 0; j < numProductLinks; j++) {\n        var productLink = document.getElementById(\"productLinks\" + j).value;\n        productLinksList.push(productLink);\n      } // Compile technologies\n\n\n      var technologiesList = [];\n\n      for (var k = 0; k < numTechnologies; k++) {\n        var technology = document.getElementById(\"technologies\" + k).value;\n        technologiesList.push(technology);\n      } // Update student team\n\n\n      product.name = document.getElementById(\"teamName\").value;\n      product.deployed = deployed;\n      product.activelyUsed = activelyUsed;\n      product.productLinks = productLinksList;\n      product.technologies = technologiesList;\n      product.students = studentList;\n      var updateProdAction = updateProductAction(product._id, product);\n      store.dispatch(updateProdAction); // Add note to project\n\n      var newNote = {\n        text: product.name + \" has been updated.\",\n        date: Date.now().toString() // Date is represented as an integer, stored as a string\n\n      };\n      var notes = _this.props.project.notes;\n\n      if (notes) {\n        notes.push(newNote);\n      } else {\n        notes = [newNote];\n      }\n\n      _this.props.project.notes = notes; // Send PUT request\n\n      var addNoteAct = addNoteAction(\"project\", _this.props.project._id, _this.props.project);\n      console.log(addNoteAct);\n      store.dispatch(addNoteAct); // Update state\n\n      _this._updateProjectState(); // Close window\n\n\n      _this._handleClose();\n    };\n\n    _this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: \"lg\",\n      numStudents: props.product.students.length,\n      numProductLinks: props.product.productLinks ? props.product.productLinks.length : 0,\n      numTechnologies: props.product.technologies ? props.product.technologies.length : 0,\n      activelyUsed: props.product.activelyUsed ? props.product.activelyUsed : false,\n      deployed: props.product.deployed ? props.product.deployed : false\n    };\n    return _this;\n  }\n\n  _createClass(EditStudentTeam, [{\n    key: \"_updateProjectState\",\n    value: function () {\n      var _updateProjectState2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var project, projectObj, getProAction;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                project = this.props.project;\n                _context.next = 3;\n                return getProjectById(project._id);\n\n              case 3:\n                projectObj = _context.sent;\n                getProAction = getProjectByIdAction(projectObj);\n                store.dispatch(getProAction);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _updateProjectState() {\n        return _updateProjectState2.apply(this, arguments);\n      }\n\n      return _updateProjectState;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          product = _this$props.product;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.editTeamButton,\n        onClick: this._handleClickOpen,\n        color: \"primary\",\n        style: {\n          marginRight: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Edit Team\")), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this._handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        onClose: this._handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Edit \", product.name), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Team Name\")), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"teamName\",\n        className: classes.textField,\n        margin: \"normal\",\n        inputProps: {\n          'aria-label': 'Team Name'\n        },\n        fullWidth: true,\n        defaultValue: product.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(TabContainer, {\n        id: \"right-tabs-example\",\n        defaultActiveKey: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        eventKey: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Students\")))), React.createElement(Col, {\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        eventKey: \"second\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Artefacts\")))), React.createElement(Col, {\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        eventKey: \"third\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Technologies\")))), React.createElement(Col, {\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        eventKey: \"fourth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Metrics\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(TabContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        eventKey: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Number of students\")), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: true,\n        value: this.state.numStudents,\n        onChange: function onChange(e) {\n          return _this2._handleNumStudentsChange(e);\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, NUM_ITEMS.map(function (number) {\n        return React.createElement(MenuItem, {\n          value: number,\n          key: number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, number);\n      }))))), React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Email Address\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, this._createRows(\"numStudents\").map(function (index) {\n        return React.createElement(TableRow, {\n          key: index.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"name\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Name'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          defaultValue: product.students[index.index] ? product.students[index.index].name : \"\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }))), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"email\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Email Address'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          defaultValue: product.students[index.index] ? product.students[index.index].email : \"\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }))));\n      }))))), React.createElement(TabContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        eventKey: \"second\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Number of artefacts\")), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: true,\n        value: this.state.numProductLinks,\n        onChange: function onChange(e) {\n          return _this2._handleNumProductLinksChange(e);\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, NUM_ITEMS.map(function (number) {\n        return React.createElement(MenuItem, {\n          value: number,\n          key: number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        }, number);\n      }))))), React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \"Artefact Link\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, this._createRows(\"numProductLinks\").map(function (index) {\n        return React.createElement(TableRow, {\n          key: index.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"productLinks\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Artefact'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          defaultValue: product.productLinks[index.index] ? product.productLinks[index.index] : \"\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        }))));\n      }))))), React.createElement(TabContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        eventKey: \"third\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Number of technologies utilised\")), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: true,\n        value: this.state.numTechnologies,\n        onChange: function onChange(e) {\n          return _this2._handleNumTechnologiesChange(e);\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, NUM_ITEMS.map(function (number) {\n        return React.createElement(MenuItem, {\n          value: number,\n          key: number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591\n          },\n          __self: this\n        }, number);\n      }))))), React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        style: {\n          marginLeft: 20,\n          width: \"98%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, this._createRows(\"numTechnologies\").map(function (index) {\n        return React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          key: index.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"technologies\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Technology'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          defaultValue: product.technologies[index.index] ? product.technologies[index.index] : \"\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619\n          },\n          __self: this\n        })));\n      })))), React.createElement(TabContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        eventKey: \"fourth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.activelyUsed,\n          onChange: this._handleMetricChange(\"activelyUsed\"),\n          value: \"activelyUsed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        }),\n        label: \"Actively Used\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.deployed,\n          onChange: this._handleMetricChange(\"deployed\"),\n          value: \"deployed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659\n          },\n          __self: this\n        }),\n        label: \"Deployed\",\n        labelPlacement: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }))))))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.saveButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this._handleUpdateStudentTeam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        className: classes.discardButton,\n        onClick: this._handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"Discard\"))));\n    }\n  }]);\n\n  return EditStudentTeam;\n}(React.Component);\n\nEditStudentTeam.propTypes = {\n  classes: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EditStudentTeam);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\IndividualProject\\StudentTeam\\EditStudentTeam.js"],"names":["React","withStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Divider","Grid","Table","TableBody","TableCell","TableRow","TableHead","MenuItem","Select","store","grey","TabContainer","TabContent","TabPane","Col","Row","Nav","FormControlLabel","Switch","PropTypes","updateProductAction","addNoteAction","styles","theme","root","flexGrow","display","flexWrap","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","paddingLeft","outline","formControl","margin","minWidth","maxWidth","fab","studentTeamHeader","fontWeight","breakpoints","up","paddingTop","down","selectField","marginTop","resize","fontSize","saveButton","discardButton","color","editTeamButton","NUM_ITEMS","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","dense","EditStudentTeam","props","_handleClickOpen","setState","open","_handleClose","_handleNumStudentsChange","event","numStudents","target","value","_handleNumProductLinksChange","numProductLinks","_handleNumTechnologiesChange","numTechnologies","_handleMetricChange","metricName","checked","_createRows","tableName","number","state","rows","i","newObject","index","push","_handleUpdateStudentTeam","deployed","activelyUsed","product","studentList","name","document","getElementById","email","nextStudent","productLinksList","j","productLink","technologiesList","k","technology","productLinks","technologies","students","updateProdAction","_id","dispatch","newNote","text","date","Date","now","toString","notes","project","addNoteAct","console","log","_updateProjectState","fullWidth","length","getProjectById","projectObj","getProAction","getProjectByIdAction","classes","marginRight","container","textField","e","map","table","input","marginLeft","width","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/**\r\n * This component contains the pop-up for updating a student team.\r\n * It sits within an individual team card under the TeamPage within a ProjectById component.\r\n * Author: Reyna Tan\r\n * Date: 18/09/2019\r\n */\r\n\r\nimport React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Divider} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport store from \"../../../../../store\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport TabContainer from \"react-bootstrap/TabContainer\";\r\nimport TabContent from \"react-bootstrap/TabContent\";\r\nimport TabPane from \"react-bootstrap/TabPane\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    updateProductAction,\r\n    addNoteAction\r\n} from \"../../../../../store/actionCreators\";\r\n\r\nconst styles = theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\"\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(4),\r\n            paddingLeft: theme.spacing(4),\r\n            outline: \"none\"\r\n        },\r\n        formControl: {\r\n            margin: 2,\r\n            minWidth: 120,\r\n            maxWidth: 300\r\n        },\r\n        fab: {\r\n            backgroundColor: \"#094183\",\r\n            '&:hover': {\r\n                backgroundColor: \"#4074B2\"\r\n            },\r\n            boxShadow: \"none\",\r\n        },\r\n        studentTeamHeader: {\r\n            fontWeight: \"bold\",\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingTop: 20,\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingTop: 5,\r\n            },\r\n            marginLeft: 23,\r\n        },\r\n        selectField: {\r\n            marginTop: 15,\r\n        },\r\n        resize: {\r\n            fontSize: 15,\r\n            padding: 10\r\n        },\r\n        saveButton: {\r\n            backgroundColor: \"#094183\",\r\n            '&:hover': {\r\n                backgroundColor: \"#4074B2\",\r\n            }\r\n        },\r\n        discardButton: {\r\n            color: \"#094183\",\r\n        },\r\n        editTeamButton: {\r\n            color: \"#094183\",\r\n            backgroundColor: grey[100]\r\n        },\r\n    }\r\n);\r\n\r\nconst NUM_ITEMS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        }\r\n    },\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n    transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n    },\r\n    getContentAnchorEl: null,\r\n    dense: \"true\"\r\n};\r\n\r\nclass EditStudentTeam extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            fullWidth: true,\r\n            maxWidth: \"lg\",\r\n            numStudents: props.product.students.length,\r\n            numProductLinks: (props.product.productLinks ? props.product.productLinks.length : 0),\r\n            numTechnologies: props.product.technologies ? props.product.technologies.length : 0,\r\n            activelyUsed: props.product.activelyUsed ? props.product.activelyUsed : false,\r\n            deployed: props.product.deployed ? props.product.deployed : false,\r\n        };\r\n\r\n    }\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _handleNumStudentsChange = (event) => {\r\n        this.setState({numStudents: event.target.value})\r\n    };\r\n\r\n    _handleNumProductLinksChange = (event) => {\r\n        this.setState({numProductLinks: event.target.value})\r\n    };\r\n\r\n    _handleNumTechnologiesChange = (event) => {\r\n        this.setState({numTechnologies: event.target.value})\r\n    };\r\n\r\n    _handleMetricChange = (metricName) => event => {\r\n        this.setState({[metricName]: event.target.checked});\r\n    };\r\n    _createRows = (tableName) => {\r\n        var number;\r\n        if (tableName === \"numStudents\") {\r\n            number = this.state.numStudents;\r\n        } else if (tableName === \"numProductLinks\") {\r\n            number = this.state.numProductLinks;\r\n        } else {\r\n            number = this.state.numTechnologies;\r\n        }\r\n\r\n        let rows = [];\r\n\r\n        for (var i = 0; i < number; i++) {\r\n            let newObject = {index: i};\r\n            rows.push(newObject);\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    _handleUpdateStudentTeam = () => {\r\n        const {\r\n            numStudents,\r\n            numProductLinks,\r\n            numTechnologies,\r\n            deployed,\r\n            activelyUsed\r\n        } = this.state;\r\n        const {product} = this.props;\r\n\r\n        // Compile student list\r\n        const studentList = [];\r\n        for (var i = 0; i < numStudents; i++) {\r\n            let name = document.getElementById(\"name\" + i).value;\r\n            let email = document.getElementById(\"email\" + i).value;\r\n            var nextStudent = {\r\n                name: name,\r\n                email: email,\r\n            };\r\n            studentList.push(nextStudent);\r\n        }\r\n\r\n        // Compile artefacts\r\n        const productLinksList = [];\r\n        for (var j = 0; j < numProductLinks; j++) {\r\n            let productLink = document.getElementById(\"productLinks\" + j).value;\r\n            productLinksList.push(productLink);\r\n        }\r\n\r\n        // Compile technologies\r\n        const technologiesList = [];\r\n        for (var k = 0; k < numTechnologies; k++) {\r\n            let technology = document.getElementById(\"technologies\" + k).value;\r\n            technologiesList.push(technology);\r\n        }\r\n\r\n        // Update student team\r\n        product.name = document.getElementById(\"teamName\").value;\r\n        product.deployed = deployed;\r\n        product.activelyUsed = activelyUsed;\r\n        product.productLinks = productLinksList;\r\n        product.technologies = technologiesList;\r\n        product.students = studentList;\r\n\r\n        const updateProdAction = updateProductAction(product._id, product);\r\n        store.dispatch(updateProdAction);\r\n\r\n        // Add note to project\r\n        var newNote = {\r\n            text: product.name + \" has been updated.\",\r\n            date: Date.now().toString(),    // Date is represented as an integer, stored as a string\r\n        };\r\n        var notes = this.props.project.notes;\r\n        if (notes) {\r\n            notes.push(newNote);\r\n        } else {\r\n            notes = [newNote];\r\n        }\r\n        this.props.project.notes = notes;\r\n\r\n        // Send PUT request\r\n        const addNoteAct = addNoteAction(\"project\", this.props.project._id, this.props.project);\r\n        console.log(addNoteAct);\r\n        store.dispatch(addNoteAct);\r\n\r\n        // Update state\r\n        this._updateProjectState();\r\n\r\n        // Close window\r\n        this._handleClose();\r\n    };\r\n\r\n    async _updateProjectState() {\r\n        const {project} = this.props;\r\n        const projectObj = await getProjectById(project._id);\r\n        const getProAction = getProjectByIdAction(projectObj);\r\n        store.dispatch(getProAction);\r\n    }\r\n\r\n    render() {\r\n        const {classes, product} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography gutterBottom/>\r\n\r\n                <Grid align=\"right\">\r\n                    <Button\r\n                        className={classes.editTeamButton}\r\n                        onClick={this._handleClickOpen}\r\n                        color=\"primary\"\r\n                        style={{marginRight: 12}}>\r\n                        Edit Team\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Dialog\r\n                    fullWidth={this.state.fullWidth}\r\n                    maxWidth={this.state.maxWidth}\r\n                    open={this.state.open}\r\n                    onClose={this._handleClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                >\r\n                    <DialogTitle onClose={this._handleClose}>\r\n                        Edit {product.name}\r\n                    </DialogTitle>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogContent>\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={2}>\r\n                                <div className={classes.studentTeamHeader}>\r\n                                    Team Name\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <form\r\n                                    className={classes.container}\r\n                                    noValidate\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <TextField\r\n                                        id=\"teamName\"\r\n                                        className={classes.textField}\r\n                                        margin=\"normal\"\r\n                                        inputProps={{'aria-label': 'Team Name'}}\r\n                                        fullWidth\r\n                                        defaultValue={product.name}\r\n                                    />\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <br/>\r\n\r\n                        {/* Tabs student, artefacts and technologies. Pre-load current information */}\r\n                        <TabContainer id=\"right-tabs-example\"\r\n                                      defaultActiveKey=\"first\">\r\n                            <Row>\r\n                                <Col xs>\r\n                                    <Nav variant=\"pills\"\r\n                                         className=\"flex-column\">\r\n                                        <Nav.Item>\r\n                                            <Nav.Link\r\n                                                eventKey=\"first\">Students</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col xs>\r\n                                    <Nav variant=\"pills\"\r\n                                         className=\"flex-column\">\r\n                                        <Nav.Item>\r\n                                            <Nav.Link\r\n                                                eventKey=\"second\">Artefacts</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col xs>\r\n                                    <Nav variant=\"pills\"\r\n                                         className=\"flex-column\">\r\n                                        <Nav.Item>\r\n                                            <Nav.Link\r\n                                                eventKey=\"third\">Technologies</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col xs>\r\n                                    <Nav variant=\"pills\"\r\n                                         className=\"flex-column\">\r\n                                        <Nav.Item>\r\n                                            <Nav.Link\r\n                                                eventKey=\"fourth\">Metrics</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                {/* Table to display students */}\r\n                                <Col sm={12}>\r\n                                    <TabContent>\r\n                                        <TabPane\r\n                                            eventKey=\"first\">\r\n                                            <Grid container\r\n                                                  spacing={8}\r\n                                                  alignItems=\"center\">\r\n                                                <Grid item\r\n                                                      xs={3}>\r\n                                                    <div\r\n                                                        className={classes.studentTeamHeader}>\r\n                                                        Number\r\n                                                        of\r\n                                                        students\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                      xs={9}>\r\n                                                    <form\r\n                                                        className={classes.container}\r\n                                                        noValidate\r\n                                                        autoComplete=\"off\">\r\n                                                        <Select\r\n                                                            className={classes.selectField}\r\n                                                            autoWidth={true}\r\n                                                            value={this.state.numStudents}\r\n                                                            onChange={e => this._handleNumStudentsChange(e)}\r\n                                                            MenuProps={MenuProps}\r\n                                                        >\r\n                                                            {NUM_ITEMS.map(number => (\r\n                                                                <MenuItem\r\n                                                                    value={number}\r\n                                                                    key={number}>\r\n                                                                    {number}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </form>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Table\r\n                                                className={classes.table}>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell\r\n                                                            align=\"left\">Name</TableCell>\r\n                                                        <TableCell\r\n                                                            align=\"left\">Email\r\n                                                            Address</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n\r\n                                                <TableBody>\r\n                                                    {this._createRows(\"numStudents\").map(\r\n                                                        (index) => (\r\n                                                            <TableRow\r\n                                                                key={index.index}>\r\n                                                                <TableCell\r\n                                                                    component=\"th\"\r\n                                                                    scope=\"row\">\r\n                                                                    <form\r\n                                                                        className={classes.container}\r\n                                                                        noValidate\r\n                                                                        autoComplete=\"off\"\r\n                                                                    >\r\n                                                                        <TextField\r\n                                                                            id={\"name\" + index.index}\r\n                                                                            className={classes.textField}\r\n                                                                            margin=\"dense\"\r\n                                                                            inputProps={{'aria-label': 'Name'}}\r\n                                                                            fullWidth\r\n                                                                            variant=\"outlined\"\r\n                                                                            defaultValue={product.students[index.index] ? product.students[index.index].name : \"\"}\r\n                                                                            InputProps={{\r\n                                                                                classes: {\r\n                                                                                    input: classes.resize,\r\n                                                                                },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </form>\r\n                                                                </TableCell>\r\n                                                                <TableCell\r\n                                                                    align=\"left\">\r\n                                                                    <form\r\n                                                                        className={classes.container}\r\n                                                                        noValidate\r\n                                                                        autoComplete=\"off\"\r\n                                                                    >\r\n                                                                        <TextField\r\n                                                                            id={\"email\" + index.index}\r\n                                                                            className={classes.textField}\r\n                                                                            margin=\"dense\"\r\n                                                                            inputProps={{'aria-label': 'Email Address'}}\r\n                                                                            fullWidth\r\n                                                                            variant=\"outlined\"\r\n                                                                            defaultValue={product.students[index.index] ? product.students[index.index].email : \"\"}\r\n                                                                            InputProps={{\r\n                                                                                classes: {\r\n                                                                                    input: classes.resize,\r\n                                                                                },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </form>\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        )\r\n                                                    )}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n\r\n                                    {/* Table to display artefacts */}\r\n                                    <TabContent>\r\n                                        <TabPane\r\n                                            eventKey=\"second\">\r\n                                            <Grid container\r\n                                                  spacing={8}\r\n                                                  alignItems=\"center\">\r\n                                                <Grid item\r\n                                                      xs={3}>\r\n                                                    <div\r\n                                                        className={classes.studentTeamHeader}>\r\n                                                        Number\r\n                                                        of\r\n                                                        artefacts\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                      xs={9}>\r\n                                                    <form\r\n                                                        className={classes.container}\r\n                                                        noValidate\r\n                                                        autoComplete=\"off\">\r\n                                                        <Select\r\n                                                            className={classes.selectField}\r\n                                                            autoWidth={true}\r\n                                                            value={this.state.numProductLinks}\r\n                                                            onChange={e => this._handleNumProductLinksChange(e)}\r\n                                                            MenuProps={MenuProps}\r\n                                                        >\r\n                                                            {NUM_ITEMS.map(number => (\r\n                                                                <MenuItem\r\n                                                                    value={number}\r\n                                                                    key={number}>\r\n                                                                    {number}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </form>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Table\r\n                                                className={classes.table}>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell\r\n                                                            align=\"left\">Artefact\r\n                                                            Link</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n\r\n                                                <TableBody>\r\n                                                    {this._createRows(\"numProductLinks\").map(\r\n                                                        (index) => (\r\n                                                            <TableRow\r\n                                                                key={index.index}>\r\n                                                                <TableCell\r\n                                                                    component=\"th\"\r\n                                                                    scope=\"row\">\r\n                                                                    <form\r\n                                                                        className={classes.container}\r\n                                                                        noValidate\r\n                                                                        autoComplete=\"off\"\r\n                                                                    >\r\n                                                                        <TextField\r\n                                                                            id={\"productLinks\" + index.index}\r\n                                                                            className={classes.textField}\r\n                                                                            margin=\"dense\"\r\n                                                                            inputProps={{'aria-label': 'Artefact'}}\r\n                                                                            fullWidth\r\n                                                                            variant=\"outlined\"\r\n                                                                            defaultValue={product.productLinks[index.index] ? product.productLinks[index.index] : \"\"}\r\n                                                                            InputProps={{\r\n                                                                                classes: {\r\n                                                                                    input: classes.resize,\r\n                                                                                },\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </form>\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        )\r\n                                                    )}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n\r\n                                    {/* Table to display technologies */}\r\n                                    <TabContent>\r\n                                        <TabPane\r\n                                            eventKey=\"third\">\r\n                                            <Grid container\r\n                                                  spacing={8}\r\n                                                  alignItems=\"center\">\r\n                                                <Grid item\r\n                                                      xs={3}>\r\n                                                    <div\r\n                                                        className={classes.studentTeamHeader}>\r\n                                                        Number\r\n                                                        of\r\n                                                        technologies\r\n                                                        utilised\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item\r\n                                                      xs={9}>\r\n                                                    <form\r\n                                                        className={classes.container}\r\n                                                        noValidate\r\n                                                        autoComplete=\"off\">\r\n                                                        <Select\r\n                                                            className={classes.selectField}\r\n                                                            autoWidth={true}\r\n                                                            value={this.state.numTechnologies}\r\n                                                            onChange={e => this._handleNumTechnologiesChange(e)}\r\n                                                            MenuProps={MenuProps}\r\n                                                        >\r\n                                                            {NUM_ITEMS.map(number => (\r\n                                                                <MenuItem\r\n                                                                    value={number}\r\n                                                                    key={number}>\r\n                                                                    {number}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </form>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid container\r\n                                                  spacing={8}\r\n                                                  style={{\r\n                                                      marginLeft: 20,\r\n                                                      width: \"98%\"\r\n                                                  }}>\r\n                                                {this._createRows(\"numTechnologies\").map(\r\n                                                    (index) => (\r\n                                                        <Grid\r\n                                                            item\r\n                                                            xs={3}\r\n                                                            key={index.index}>\r\n                                                            <form\r\n                                                                className={classes.container}\r\n                                                                noValidate\r\n                                                                autoComplete=\"off\"\r\n                                                            >\r\n                                                                <TextField\r\n                                                                    id={\"technologies\" + index.index}\r\n                                                                    className={classes.textField}\r\n                                                                    margin=\"dense\"\r\n                                                                    inputProps={{'aria-label': 'Technology'}}\r\n                                                                    fullWidth\r\n                                                                    variant=\"outlined\"\r\n                                                                    defaultValue={product.technologies[index.index] ? product.technologies[index.index] : \"\"}\r\n                                                                    InputProps={{\r\n                                                                        classes: {\r\n                                                                            input: classes.resize,\r\n                                                                        },\r\n                                                                    }}\r\n                                                                />\r\n                                                            </form>\r\n                                                        </Grid>\r\n                                                    )\r\n                                                )}\r\n                                            </Grid>\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n\r\n                                    {/* Table to display metrics */}\r\n                                    <TabContent>\r\n                                        <TabPane\r\n                                            eventKey=\"fourth\">\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.activelyUsed}\r\n                                                        onChange={this._handleMetricChange(\"activelyUsed\")}\r\n                                                        value=\"activelyUsed\"\r\n                                                    />\r\n                                                }\r\n                                                label=\"Actively Used\"\r\n                                                labelPlacement=\"start\"\r\n                                            />\r\n                                            <br/>\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Switch\r\n                                                        checked={this.state.deployed}\r\n                                                        onChange={this._handleMetricChange(\"deployed\")}\r\n                                                        value=\"deployed\"\r\n                                                    />\r\n                                                }\r\n                                                label=\"Deployed\"\r\n                                                labelPlacement=\"start\"\r\n                                            />\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabContainer>\r\n\r\n                    </DialogContent>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            className={classes.saveButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this._handleUpdateStudentTeam}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.discardButton}\r\n                            onClick={this._handleClose}\r\n                            color=\"primary\">\r\n                            Discard\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditStudentTeam.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    product: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EditStudentTeam);\r\n"]},"metadata":{},"sourceType":"module"}