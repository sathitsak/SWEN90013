{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\IndividualProject\\\\StudentTeam\\\\CreateStudentTeamModal.js\";\n\n/**\r\n * This component contains the pop-up for creating a student team.\r\n * It sits within an individual project page under the student team module.\r\n * Author: Reyna Tan\r\n * Date: 01/09/2019\r\n */\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport TextField from \"@material-ui/core/TextField\";\nimport { Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport store from \"../../../../../store\";\nimport PropTypes from \"prop-types\";\nimport { createNewProductAction, getProjectByIdAction } from \"../../../../../store/actionCreators\";\nimport { getProjectById } from \"../../../../../api\";\n\nvar styles = function styles(theme) {\n  var _studentTeamHeader;\n\n  return {\n    root: {\n      flexGrow: 1,\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      outline: \"none\"\n    },\n    formControl: {\n      margin: 2,\n      minWidth: 120,\n      maxWidth: 300\n    },\n    fab: {\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\"\n      },\n      boxShadow: \"none\"\n    },\n    studentTeamHeader: (_studentTeamHeader = {\n      fontWeight: \"bold\"\n    }, _defineProperty(_studentTeamHeader, theme.breakpoints.up('sm'), {\n      paddingTop: 20\n    }), _defineProperty(_studentTeamHeader, theme.breakpoints.down('sm'), {\n      paddingTop: 5\n    }), _studentTeamHeader),\n    selectField: {\n      marginTop: 15\n    },\n    resize: {\n      fontSize: 15,\n      padding: 10\n    },\n    createButton: {\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    discardButton: {\n      color: \"#094183\"\n    }\n  };\n};\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP\n    }\n  },\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null,\n  dense: \"true\"\n};\nvar TEAM_SIZE = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nvar INITIAL_NUM_STUDENTS = 4;\n\nvar CreateStudentTeamModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateStudentTeamModal, _React$Component);\n\n  function CreateStudentTeamModal(props) {\n    var _this;\n\n    _classCallCheck(this, CreateStudentTeamModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateStudentTeamModal).call(this, props));\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._handleNumStudentsChange = function (event) {\n      _this.setState({\n        numStudents: event.target.value\n      });\n    };\n\n    _this._createStudentRows = function () {\n      var rows = [];\n\n      for (var i = 0; i < _this.state.numStudents; i++) {\n        var newObject = {\n          index: i\n        };\n        rows.push(newObject);\n      }\n\n      return rows;\n    };\n\n    _this._concatenateNames = function (firstName, lastName) {\n      return firstName + \" \" + lastName;\n    };\n\n    _this._handleCreateStudentTeam = function () {\n      var projectId = _this.props.projectId;\n      var studentList = [];\n\n      for (var i = 0; i < _this.state.numStudents; i++) {\n        var firstName = document.getElementById(\"firstName\" + i).value;\n        var lastName = document.getElementById(\"lastName\" + i).value;\n        var email = document.getElementById(\"email\" + i).value;\n        var nextStudent = {\n          name: _this._concatenateNames(firstName, lastName),\n          email: email\n        };\n        studentList.push(nextStudent);\n      }\n\n      var teamName = document.getElementById(\"teamName\").value;\n      var newProduct = {\n        name: teamName,\n        projectId: projectId,\n        students: studentList\n      }; // Send POST request\n\n      var createNewProdAction = createNewProductAction(newProduct);\n      store.dispatch(createNewProdAction); // Add note to project\n\n      var newNote = {\n        text: \"Student Team \" + teamName + \" has been created.\",\n        date: Date.now().toString() // Date is represented as an integer, stored as a string\n\n      };\n      var notes = object.notes;\n\n      if (notes) {\n        notes.push(newNote);\n      } else {\n        notes = [newNote];\n      }\n\n      object.notes = notes; // Send PUT request\n\n      var addNoteAct = addNoteAction(objectType, object._id, object);\n      console.log(addNoteAct);\n      store.dispatch(addNoteAct); // Update state\n\n      _this._updateProjectState(); // Close window\n\n\n      _this._handleClose();\n    };\n\n    _this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: \"lg\",\n      numStudents: INITIAL_NUM_STUDENTS\n    };\n    return _this;\n  }\n\n  _createClass(CreateStudentTeamModal, [{\n    key: \"_updateProjectState\",\n    value: function () {\n      var _updateProjectState2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var projectId, project, getProAction;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                projectId = this.props.projectId;\n                _context.next = 3;\n                return getProjectById(projectId);\n\n              case 3:\n                project = _context.sent;\n                getProAction = getProjectByIdAction(project);\n                store.dispatch(getProAction);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _updateProjectState() {\n        return _updateProjectState2.apply(this, arguments);\n      }\n\n      return _updateProjectState;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Create Student Team\",\n        className: classes.fab,\n        onClick: this._handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(GroupAddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this._handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        onClose: this._handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Create a new student team\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Team Name\")), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"teamName\",\n        className: classes.textField,\n        margin: \"normal\",\n        inputProps: {\n          'aria-label': 'Team Name'\n        },\n        fullWidth: true,\n        defaultValue: \"Team \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.studentTeamHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Number of students\")), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: true,\n        value: this.state.numStudents,\n        onChange: function onChange(e) {\n          return _this2._handleNumStudentsChange(e);\n        } // input={<Input id=\"email_template\" />}\n        ,\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, TEAM_SIZE.map(function (size) {\n        return React.createElement(MenuItem, {\n          value: size,\n          key: size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, size);\n      }))))), React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Email Address\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, this._createStudentRows().map(function (index) {\n        return React.createElement(TableRow, {\n          key: index.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"firstName\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'First Name'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }))), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"lastName\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Last Name'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }))), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"email\" + index.index,\n          className: classes.textField,\n          margin: \"dense\",\n          inputProps: {\n            'aria-label': 'Email Address'\n          },\n          fullWidth: true,\n          variant: \"outlined\",\n          InputProps: {\n            classes: {\n              input: classes.resize\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }))));\n      })))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.createButton,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this._handleCreateStudentTeam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Create\"), React.createElement(Button, {\n        className: classes.discardButton,\n        onClick: this._handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Discard\"))));\n    }\n  }]);\n\n  return CreateStudentTeamModal;\n}(React.Component);\n\nCreateStudentTeamModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired\n};\nexport default withStyles(styles)(CreateStudentTeamModal);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\IndividualProject\\StudentTeam\\CreateStudentTeamModal.js"],"names":["React","withStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogTitle","Fab","GroupAddIcon","TextField","Divider","Grid","Table","TableBody","TableCell","TableRow","TableHead","MenuItem","Select","store","PropTypes","createNewProductAction","getProjectByIdAction","getProjectById","styles","theme","root","flexGrow","display","flexWrap","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","paddingLeft","outline","formControl","margin","minWidth","maxWidth","fab","studentTeamHeader","fontWeight","breakpoints","up","paddingTop","down","selectField","marginTop","resize","fontSize","createButton","discardButton","color","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","dense","TEAM_SIZE","INITIAL_NUM_STUDENTS","CreateStudentTeamModal","props","_handleClickOpen","setState","open","_handleClose","_handleNumStudentsChange","event","numStudents","target","value","_createStudentRows","rows","i","state","newObject","index","push","_concatenateNames","firstName","lastName","_handleCreateStudentTeam","projectId","studentList","document","getElementById","email","nextStudent","name","teamName","newProduct","students","createNewProdAction","dispatch","newNote","text","date","Date","now","toString","notes","object","addNoteAct","addNoteAction","objectType","_id","console","log","_updateProjectState","fullWidth","project","getProAction","classes","container","textField","e","map","size","table","input","Component","propTypes","isRequired","string"],"mappings":"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","sourcesContent":["/**\r\n * This component contains the pop-up for creating a student team.\r\n * It sits within an individual project page under the student team module.\r\n * Author: Reyna Tan\r\n * Date: 01/09/2019\r\n */\r\n\r\nimport React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Divider} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport store from \"../../../../../store\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    createNewProductAction,\r\n    getProjectByIdAction\r\n} from \"../../../../../store/actionCreators\";\r\nimport {getProjectById} from \"../../../../../api\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4),\r\n        paddingLeft: theme.spacing(4),\r\n        outline: \"none\"\r\n    },\r\n    formControl: {\r\n        margin: 2,\r\n        minWidth: 120,\r\n        maxWidth: 300\r\n    },\r\n    fab: {\r\n        backgroundColor: \"#094183\",\r\n        '&:hover': {\r\n            backgroundColor: \"#4074B2\"\r\n        },\r\n        boxShadow: \"none\",\r\n    },\r\n    studentTeamHeader: {\r\n        fontWeight: \"bold\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: 20,\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingTop: 5,\r\n        },\r\n    },\r\n    selectField: {\r\n        marginTop: 15,\r\n    },\r\n    resize: {\r\n        fontSize: 15,\r\n        padding: 10\r\n    },\r\n    createButton: {\r\n        backgroundColor: \"#094183\",\r\n        '&:hover': {\r\n            backgroundColor: \"#4074B2\",\r\n        }\r\n    },\r\n    discardButton: {\r\n        color: \"#094183\",\r\n    }\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        }\r\n    },\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n    transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n    },\r\n    getContentAnchorEl: null,\r\n    dense: \"true\"\r\n};\r\n\r\nconst TEAM_SIZE = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\nconst INITIAL_NUM_STUDENTS = 4;\r\n\r\nclass CreateStudentTeamModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            fullWidth: true,\r\n            maxWidth: \"lg\",\r\n            numStudents: INITIAL_NUM_STUDENTS,\r\n        };\r\n    }\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _handleNumStudentsChange = (event) => {\r\n        this.setState({numStudents: event.target.value})\r\n    };\r\n\r\n    _createStudentRows = () => {\r\n        let rows = [];\r\n\r\n        for (var i = 0; i < this.state.numStudents; i++) {\r\n            let newObject = {index: i};\r\n            rows.push(newObject);\r\n        }\r\n        return rows;\r\n    };\r\n\r\n    _concatenateNames = (firstName, lastName) => {\r\n        return (firstName + \" \" + lastName);\r\n    };\r\n\r\n    _handleCreateStudentTeam = () => {\r\n        const {projectId} = this.props;\r\n\r\n        const studentList = [];\r\n        for (var i = 0; i < this.state.numStudents; i++) {\r\n            let firstName = document.getElementById(\"firstName\" + i).value;\r\n            let lastName = document.getElementById(\"lastName\" + i).value;\r\n            let email = document.getElementById(\"email\" + i).value;\r\n            var nextStudent = {\r\n                name: this._concatenateNames(firstName, lastName),\r\n                email: email,\r\n            };\r\n            studentList.push(nextStudent);\r\n        }\r\n\r\n        const teamName = document.getElementById(\"teamName\").value;\r\n        const newProduct = {\r\n            name: teamName,\r\n            projectId: projectId,\r\n            students: studentList\r\n        };\r\n\r\n        // Send POST request\r\n        const createNewProdAction = createNewProductAction(newProduct);\r\n        store.dispatch(createNewProdAction);\r\n\r\n        // Add note to project\r\n        var newNote = {\r\n            text: \"Student Team \" + teamName + \" has been created.\",\r\n            date: Date.now().toString(),    // Date is represented as an integer, stored as a string\r\n        };\r\n        var notes = object.notes;\r\n        if (notes) {\r\n            notes.push(newNote);\r\n        } else {\r\n            notes = [newNote];\r\n        }\r\n        object.notes = notes;\r\n\r\n        // Send PUT request\r\n        const addNoteAct = addNoteAction(objectType, object._id, object);\r\n        console.log(addNoteAct);\r\n        store.dispatch(addNoteAct);\r\n\r\n        // Update state\r\n        this._updateProjectState();\r\n\r\n        // Close window\r\n        this._handleClose();\r\n    };\r\n\r\n    async _updateProjectState() {\r\n        const {projectId} = this.props;\r\n        const project = await getProjectById(projectId);\r\n        const getProAction = getProjectByIdAction(project);\r\n        store.dispatch(getProAction);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography gutterBottom/>\r\n\r\n                <Grid align=\"right\">\r\n                    <Fab\r\n                        color=\"primary\"\r\n                        aria-label=\"Create Student Team\"\r\n                        className={classes.fab}\r\n                        onClick={this._handleClickOpen}\r\n                    >\r\n                        <GroupAddIcon/>\r\n                    </Fab>\r\n                </Grid>\r\n\r\n                <Dialog\r\n                    fullWidth={this.state.fullWidth}\r\n                    maxWidth={this.state.maxWidth}\r\n                    open={this.state.open}\r\n                    onClose={this._handleClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                >\r\n                    <DialogTitle onClose={this._handleClose}>\r\n                        Create a new student team\r\n                    </DialogTitle>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogContent>\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={2}>\r\n                                <div className={classes.studentTeamHeader}>\r\n                                    Team Name\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <form\r\n                                    className={classes.container}\r\n                                    noValidate\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <TextField\r\n                                        id=\"teamName\"\r\n                                        className={classes.textField}\r\n                                        margin=\"normal\"\r\n                                        inputProps={{'aria-label': 'Team Name'}}\r\n                                        fullWidth\r\n                                        defaultValue=\"Team \"\r\n                                    />\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={8}>\r\n                            <Grid item xs={2}>\r\n                                <div className={classes.studentTeamHeader}>\r\n                                    Number of students\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <form className={classes.container} noValidate\r\n                                      autoComplete=\"off\">\r\n                                    <Select\r\n                                        className={classes.selectField}\r\n                                        autoWidth={true}\r\n                                        value={this.state.numStudents}\r\n                                        onChange={e => this._handleNumStudentsChange(e)}\r\n                                        // input={<Input id=\"email_template\" />}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {TEAM_SIZE.map(size => (\r\n                                            <MenuItem value={size} key={size}>\r\n                                                {size}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">First\r\n                                        Name</TableCell>\r\n                                    <TableCell align=\"left\">Last\r\n                                        Name</TableCell>\r\n                                    <TableCell align=\"left\">Email\r\n                                        Address</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this._createStudentRows().map(\r\n                                    (index) => (\r\n                                        <TableRow key={index.index}>\r\n                                            <TableCell component=\"th\"\r\n                                                       scope=\"row\">\r\n                                                <form\r\n                                                    className={classes.container}\r\n                                                    noValidate\r\n                                                    autoComplete=\"off\"\r\n                                                >\r\n                                                    <TextField\r\n                                                        id={\"firstName\" + index.index}\r\n                                                        className={classes.textField}\r\n                                                        margin=\"dense\"\r\n                                                        inputProps={{'aria-label': 'First Name'}}\r\n                                                        fullWidth\r\n                                                        variant=\"outlined\"\r\n                                                        InputProps={{\r\n                                                            classes: {\r\n                                                                input: classes.resize,\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                </form>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <form\r\n                                                    className={classes.container}\r\n                                                    noValidate\r\n                                                    autoComplete=\"off\"\r\n                                                >\r\n                                                    <TextField\r\n                                                        id={\"lastName\" + index.index}\r\n                                                        className={classes.textField}\r\n                                                        margin=\"dense\"\r\n                                                        inputProps={{'aria-label': 'Last Name'}}\r\n                                                        fullWidth\r\n                                                        variant=\"outlined\"\r\n                                                        InputProps={{\r\n                                                            classes: {\r\n                                                                input: classes.resize,\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                </form>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <form\r\n                                                    className={classes.container}\r\n                                                    noValidate\r\n                                                    autoComplete=\"off\"\r\n                                                >\r\n                                                    <TextField\r\n                                                        id={\"email\" + index.index}\r\n                                                        className={classes.textField}\r\n                                                        margin=\"dense\"\r\n                                                        inputProps={{'aria-label': 'Email Address'}}\r\n                                                        fullWidth\r\n                                                        variant=\"outlined\"\r\n                                                        InputProps={{\r\n                                                            classes: {\r\n                                                                input: classes.resize,\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                </form>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </DialogContent>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            className={classes.createButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this._handleCreateStudentTeam}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.discardButton}\r\n                            onClick={this._handleClose}\r\n                            color=\"primary\">\r\n                            Discard\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreateStudentTeamModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    projectId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CreateStudentTeamModal);\r\n"]},"metadata":{},"sourceType":"module"}