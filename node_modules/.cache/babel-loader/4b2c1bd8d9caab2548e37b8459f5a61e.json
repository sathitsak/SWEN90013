{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\AllProjects\\\\ProjectCard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport red from \"@material-ui/core/colors/red\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nvar styles = {\n  card: {\n    margin: 10\n  },\n  link: {\n    float: \"left\",\n    width: \"100%\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      backgroundColor: grey[200],\n      textDecoration: \"none\"\n    },\n    \"&:active\": {\n      backgroundColor: grey[300]\n    }\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  cardHeader: {\n    paddingBottom: 0\n  },\n  cardContent: {\n    paddingTop: 12,\n    paddingBottom: 0\n  }\n};\n\nvar ProjectCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectCard, _React$Component);\n\n  function ProjectCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._showSupervisor = function (supervisorId) {\n      var supervisors = _this.props.supervisors;\n      var supervisorName = \"NO SUPERVISOR ASSIGNED\";\n      supervisors.forEach(function (sp) {\n        if (sp._id === supervisorId) {\n          // supervisorName = sp.firstName + \" \" + sp.lastName;\n          supervisorName = sp.firstName;\n        }\n      });\n      return supervisorName;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          _id = _this$props._id,\n          project = _this$props.project;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dashboard/projects/\".concat(_id),\n        className: classes.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        avatar: React.createElement(Avatar, {\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, project.name.slice(0, 1).toUpperCase()),\n        title: project.name,\n        subheader: project.industryType ? project.industryType : \" \",\n        component: \"div\",\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        component: \"div\",\n        className: classes.cardContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"overline\",\n        align: \"left\",\n        style: {\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Client: \", project.proposal.client.firstName + \" \" + project.proposal.client.lastName), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"p\",\n        variant: \"overline\",\n        style: {\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Supervisor: \", this._showSupervisor(project.supervisorId)))));\n    }\n  }]);\n\n  return ProjectCard;\n}(React.Component);\n\nProjectCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  _id: PropTypes.string.isRequired,\n  project: PropTypes.object.isRequired,\n  supervisors: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(ProjectCard);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\AllProjects\\ProjectCard.js"],"names":["React","PropTypes","withStyles","Card","CardHeader","Link","Avatar","red","grey","Typography","Divider","CardContent","styles","card","margin","link","float","width","textDecoration","backgroundColor","avatar","cardHeader","paddingBottom","cardContent","paddingTop","ProjectCard","_showSupervisor","supervisorId","supervisors","props","supervisorName","forEach","sp","_id","firstName","classes","project","name","slice","toUpperCase","industryType","marginBottom","proposal","client","lastName","marginTop","Component","propTypes","object","isRequired","string","array"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst styles = {\r\n    card: {\r\n        margin: 10,\r\n    },\r\n    link: {\r\n        float: \"left\",\r\n        width: \"100%\",\r\n        textDecoration: \"none\",\r\n        \"&:hover\": {\r\n            backgroundColor: grey[200],\r\n            textDecoration: \"none\",\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: grey[300]\r\n        }\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500]\r\n    },\r\n    cardHeader: {\r\n        paddingBottom: 0\r\n    },\r\n    cardContent: {\r\n        paddingTop: 12,\r\n        paddingBottom: 0\r\n    }\r\n};\r\n\r\nclass ProjectCard extends React.Component {\r\n    render() {\r\n        const {classes, _id, project} = this.props;\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <Link to={`/dashboard/projects/${_id}`}\r\n                      className={classes.link}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar className={classes.avatar}>\r\n                                {project.name.slice(0, 1).toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={project.name}\r\n                        subheader={project.industryType ? project.industryType : \" \"}\r\n                        component=\"div\"\r\n                        className={classes.cardHeader}\r\n                    />\r\n                    <CardContent component=\"div\"\r\n                                 className={classes.cardContent}>\r\n                        <Typography\r\n                            variant=\"overline\"\r\n                            align=\"left\"\r\n                            style={{marginBottom: 5}}\r\n                        >\r\n                            Client: {project.proposal.client.firstName + \" \" + project.proposal.client.lastName}\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Typography\r\n                            component=\"p\"\r\n                            variant=\"overline\"\r\n                            style={{marginTop: 5}}\r\n                        >\r\n                            Supervisor: {this._showSupervisor(project.supervisorId)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    _showSupervisor = (supervisorId) => {\r\n        const {supervisors} = this.props;\r\n        let supervisorName = \"NO SUPERVISOR ASSIGNED\";\r\n        supervisors.forEach(sp => {\r\n            if (sp._id === supervisorId) {\r\n                // supervisorName = sp.firstName + \" \" + sp.lastName;\r\n                supervisorName = sp.firstName;\r\n            }\r\n        });\r\n        return supervisorName;\r\n    };\r\n}\r\n\r\nProjectCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    _id: PropTypes.string.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    supervisors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProjectCard);\r\n"]},"metadata":{},"sourceType":"module"}