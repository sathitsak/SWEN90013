{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Email\\\\EmailModal.js\";\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Divider } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport store from \"../../../store\";\nimport axios from \"axios\";\nimport { ENETUNREACH } from \"constants\";\nimport { constructNormalEmail } from \"./EmailHeaderFooter\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  var _selectField;\n\n  return {\n    root: {\n      flexGrow: 1,\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      outline: \"none\"\n    },\n    formControl: {\n      margin: 2,\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    selectField: (_selectField = {}, _defineProperty(_selectField, theme.breakpoints.up(\"md\"), {\n      width: 1118\n    }), _defineProperty(_selectField, theme.breakpoints.down(\"md\"), {\n      width: 480\n    }), _selectField),\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(),\n      top: theme.spacing(),\n      color: theme.palette.grey[500]\n    },\n    fab: {\n      backgroundColor: \"#094183\",\n      \"&:hover\": {\n        backgroundColor: \"#4074B2\"\n      },\n      boxShadow: \"none\"\n    },\n    sendButton: {\n      backgroundColor: \"#094183\",\n      \"&:hover\": {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    discardButton: {\n      color: \"#094183\"\n    }\n  };\n};\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: \"87%\"\n    }\n  },\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null,\n  dense: \"true\"\n};\nvar names = [\"Oliver Hansen\", \"Van Henry\", \"April Tucker\", \"Ralph Hubbard\", \"Omar Alexander\", \"Carlos Abbott\", \"Miriam Wagner\", \"Bradley Wilkerson\", \"Virginia Andrews\", \"Kelly Snyder\"];\nvar templatesMap = new Map();\nvar templatesNewArray = [];\nvar tempCoordinatorNameArray = [];\nvar nameEmailMap = new Map();\nvar coordinatorMap = new Map();\nvar templates = [{\n  title: \"Template A\",\n  message: \"template content a\"\n}, {\n  title: \"Template B\",\n  message: \"template content b\"\n}, {\n  title: \"Template C\",\n  message: \"template content c\"\n}, {\n  title: \"None\",\n  message: \"\"\n}];\n\nvar EmailModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EmailModal, _React$Component);\n\n  function EmailModal(props) {\n    var _this;\n\n    _classCallCheck(this, EmailModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmailModal).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      }); //get all coordinators\n\n\n      console.log(store.getState().subjects);\n      var subjects = store.getState().subjects;\n      var coordinators = [];\n      subjects.map(function (indCoor) {\n        return coordinators.push(indCoor.coordinator.firstName);\n      });\n      console.log(\"new here\");\n      console.log(coordinators);\n\n      for (var x = 0; x < coordinators.length; x++) {\n        var fullName = coordinators[x].firstName + \" \" + coordinators[x].lastName;\n        var fullNameRole = fullName + \" (Coordinator)\";\n        nameEmailMap.set(fullNameRole, coordinators[x].email);\n\n        _this.state.available_recipients.push(fullNameRole);\n      } //get the templates\n\n\n      axios.get(\"http://172.26.88.142:3000/api/template\").then(function (response) {\n        console.log(response.data);\n        var templates = response.data;\n        Object.keys(templates).forEach(function (key) {\n          console.log(key, templates[key].title);\n          templatesNewArray.push(templates[key].title);\n          templatesMap.set(templates[key].title, templates[key].message);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log(_this.state.templates); //check the URL to determine the context of the email\n\n      var url = window.location.href;\n      var split = url.split(\"/\");\n      var context = split[4];\n      console.log(split[4]);\n      var clientName = store.getState().proposal.client.firstName + \" \" + store.getState().proposal.client.lastName + \" (Client)\";\n      var clientEmail = store.getState().proposal.client.email;\n      var clientSecondaryName = store.getState().proposal.client.secondaryContactFirstName + \" \" + store.getState().proposal.client.secondaryContactLastName + \" (Secondary Contact)\";\n      var clientSecondaryEmail = store.getState().proposal.client.secondaryContactEmail;\n\n      if (split[4] == \"proposals\") {\n        nameEmailMap.set(clientName, clientEmail);\n\n        _this.state.available_recipients.push(clientName);\n\n        nameEmailMap.set(clientSecondaryName, clientSecondaryEmail);\n\n        for (var _x in tempCoordinatorNameArray) {\n          _this.state.email_recipients.push(_x);\n        }\n\n        _this.state.available_recipients.push(clientSecondaryName);\n      } else if (split[4] == \"projects\") {\n        for (var _x2 in tempCoordinatorNameArray) {\n          _this.state.email_recipients.push(_x2);\n        }\n\n        _this.state.available_recipients.push(clientName, clientSecondaryName);\n\n        nameEmailMap.set(store.getState().proposal.client.firstName, store.getState().proposal.client.email);\n        var teams = store.getState().project.products;\n        var students = [];\n        teams.map(function (individualTeam) {\n          return students.push(individualTeam.students);\n        });\n        var studentsFlattened = students.flat();\n        studentsFlattened.map(function (student) {\n          nameEmailMap.set(student.name, student.email);\n\n          _this.state.available_recipients.push(student.name);\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        available_recipients: []\n      });\n\n      _this.setState({\n        email_recipients: []\n      });\n\n      _this.setState({\n        email_cc: []\n      });\n\n      nameEmailMap.clear();\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (emailField, event) {\n      if (emailField == \"email_recipients\") {\n        _this.setState({\n          email_recipients: event.target.value\n        });\n      } else if (emailField == \"email_cc\") {\n        _this.setState({\n          email_cc: event.target.value\n        });\n      } else if (emailField == \"email_bcc\") {\n        _this.setState({\n          email_bcc: event.target.value\n        });\n      } else if (emailField == \"email_subject\") {\n        _this.setState({\n          email_subject: event.target.value\n        });\n      } else if (emailField == \"email_template\") {\n        _this.setState({\n          templatesNew: event.target.value\n        });\n\n        var email_message = _this.getEmailMessage(event.target.value);\n\n        _this.setState({\n          email_message: email_message\n        });\n      }\n    };\n\n    _this.handleChangeMultiple = function (emailField, event) {\n      var options = event.target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n\n      if (emailField == \"email_recipients\") {\n        _this.setState({\n          email_recipients: value\n        });\n      } else if (emailField == \"email_cc\") {\n        _this.setState({\n          email_cc: value\n        });\n      } else if (emailField == \"email_bcc\") {\n        _this.setState({\n          email_bcc: value\n        });\n      }\n    };\n\n    _this.unsubscribe = store.subscribe(_this.handleChange);\n    _this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: \"lg\",\n      email_recipients: [],\n      email_cc: [],\n      email_bcc: [],\n      email_subject: \"\",\n      email_template: \"\",\n      email_message: \"\",\n      context: \"\",\n      available_recipients: [],\n      templatesNew: []\n    };\n    _this.handleSendEmail = _this.handleSendEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EmailModal, [{\n    key: \"getEmailMessage\",\n    value: function getEmailMessage(template_title) {\n      // for (var i = 0; i < templates.length; i++) {\n      //   if (templates[i].title === template_title) {\n      //     return templates[i].message;\n      //   }\n      // }\n      return templatesMap.get(template_title);\n    }\n  }, {\n    key: \"handleSendEmail\",\n    value: function handleSendEmail() {\n      var emails = [];\n      var emailscc = [];\n      this.state.email_recipients.map(function (name) {\n        return emails.push(nameEmailMap.get(name));\n      });\n      this.state.email_cc.map(function (name) {\n        return emailscc.push(nameEmailMap.get(name));\n      });\n      console.log(emails); //send multiple posts\n\n      axios.post(\"http://35.197.167.244/message\", {\n        from: \"CIS Project Management\",\n        to: emails,\n        subject: this.state.email_subject,\n        html: constructNormalEmail(this.state.email_message),\n        projectType: \"fdafdsa\",\n        cc: emailscc,\n        projectID: \"\"\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      alert(\"sending email\");\n      this.setState({\n        email_recipients: []\n      });\n      this.setState({\n        available_recipients: []\n      });\n      nameEmailMap.clear();\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"_handleEmailContentChange\",\n    value: function _handleEmailContentChange(e) {\n      var email_message = e.target.value;\n      this.setState({\n        email_message: email_message\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Email\",\n        className: classes.fab,\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(EmailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Send Email\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email_recipients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"To\"), React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: \"true\",\n        multiple: true,\n        value: this.state.email_recipients,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"email_recipients\", e);\n        },\n        input: React.createElement(Input, {\n          id: \"email_recipients\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 393\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, this.state.available_recipients.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email_cc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"CC\"), React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: \"true\",\n        multiple: true,\n        value: this.state.email_cc,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"email_cc\", e);\n        },\n        input: React.createElement(Input, {\n          id: \"email_cc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 423\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, this.state.available_recipients.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email_bcc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"BCC\"), React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: \"true\",\n        multiple: true,\n        value: this.state.email_bcc,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"email_bcc\", e);\n        },\n        input: React.createElement(Input, {\n          id: \"email_bcc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 451\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 453\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, names.map(function (name) {\n        return React.createElement(MenuItem, {\n          key: name,\n          value: name,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, name);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"standard-with-placeholder\",\n        label: \"Please enter a subject\",\n        placeholder: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        style: {\n          maxWidth: 300,\n          minWidth: 120\n        },\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"email_subject\", e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email_template\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \"Choose template if applicable\"), React.createElement(Select, {\n        className: classes.selectField,\n        autoWidth: \"true\",\n        value: this.state.templatesNew,\n        onChange: function onChange(e) {\n          return _this2.handleChange(\"email_template\", e);\n        },\n        input: React.createElement(Input, {\n          id: \"email_template\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490\n          },\n          __self: this\n        }),\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, templatesNewArray.map(function (template) {\n        return React.createElement(MenuItem, {\n          key: template,\n          value: template,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, template);\n      }))), React.createElement(Divider, {\n        style: {\n          marginTop: \"1%\",\n          marginBottom: \"1%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), React.createElement(InputBase, {\n        fullWidth: true,\n        id: \"message\",\n        className: classes.margin,\n        multiline: \"true\",\n        rows: \"10\",\n        value: this.state.email_message,\n        onChange: function onChange(e) {\n          return _this2._handleEmailContentChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSendEmail,\n        className: classes.sendButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"Send\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        className: classes.discardButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Discard\"))));\n    }\n  }]);\n\n  return EmailModal;\n}(React.Component);\n\nexport default withStyles(styles)(EmailModal);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Email\\EmailModal.js"],"names":["React","forwardRef","PropTypes","withStyles","Typography","Modal","Button","Chip","Dialog","DialogActions","DialogContent","DialogTitle","Fab","EmailIcon","TextField","InputBase","Divider","FormControl","Input","InputLabel","MenuItem","Select","store","axios","ENETUNREACH","constructNormalEmail","rand","Math","round","random","getModalStyle","top","left","transform","styles","theme","root","flexGrow","display","flexWrap","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","paddingLeft","outline","formControl","margin","minWidth","maxWidth","chips","selectField","breakpoints","up","width","down","closeButton","position","right","color","grey","fab","sendButton","discardButton","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","dense","names","templatesMap","Map","templatesNewArray","tempCoordinatorNameArray","nameEmailMap","coordinatorMap","templates","title","message","EmailModal","props","handleClickOpen","setState","open","console","log","getState","subjects","coordinators","map","indCoor","push","coordinator","firstName","x","length","fullName","lastName","fullNameRole","set","email","state","available_recipients","get","then","response","data","Object","keys","forEach","key","catch","error","url","window","location","href","split","context","clientName","proposal","client","clientEmail","clientSecondaryName","secondaryContactFirstName","secondaryContactLastName","clientSecondaryEmail","secondaryContactEmail","email_recipients","teams","project","products","students","individualTeam","studentsFlattened","flat","student","name","handleClose","email_cc","clear","handleChange","emailField","event","target","value","email_bcc","email_subject","templatesNew","email_message","getEmailMessage","handleChangeMultiple","options","i","l","selected","unsubscribe","subscribe","fullWidth","email_template","handleSendEmail","bind","template_title","emails","emailscc","post","from","to","subject","html","projectType","cc","projectID","alert","e","classes","container","chip","textField","template","marginTop","marginBottom","_handleEmailContentChange","Component"],"mappings":"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","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport store from \"../../../store\";\r\nimport axios from \"axios\";\r\nimport { ENETUNREACH } from \"constants\";\r\nimport {constructNormalEmail} from \"./EmailHeaderFooter\"; \r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    paddingLeft: theme.spacing(4),\r\n    outline: \"none\"\r\n  },\r\n  formControl: {\r\n    margin: 2,\r\n    minWidth: 120,\r\n    maxWidth: 300\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  selectField: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 1118\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 480\r\n    }\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(),\r\n    top: theme.spacing(),\r\n    color: theme.palette.grey[500]\r\n  },\r\n  fab: {\r\n    backgroundColor: \"#094183\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#4074B2\"\r\n    },\r\n    boxShadow: \"none\"\r\n  },\r\n  sendButton: {\r\n    backgroundColor: \"#094183\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#4074B2\"\r\n    }\r\n  },\r\n  discardButton: {\r\n    color: \"#094183\"\r\n  }\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: \"87%\"\r\n    }\r\n  },\r\n  anchorOrigin: {\r\n    vertical: \"bottom\",\r\n    horizontal: \"left\"\r\n  },\r\n  transformOrigin: {\r\n    vertical: \"top\",\r\n    horizontal: \"left\"\r\n  },\r\n  getContentAnchorEl: null,\r\n  dense: \"true\"\r\n};\r\n\r\nconst names = [\r\n  \"Oliver Hansen\",\r\n  \"Van Henry\",\r\n  \"April Tucker\",\r\n  \"Ralph Hubbard\",\r\n  \"Omar Alexander\",\r\n  \"Carlos Abbott\",\r\n  \"Miriam Wagner\",\r\n  \"Bradley Wilkerson\",\r\n  \"Virginia Andrews\",\r\n  \"Kelly Snyder\"\r\n];\r\n\r\nconst templatesMap = new Map();\r\nconst templatesNewArray = [];\r\nconst tempCoordinatorNameArray = [];\r\n\r\nconst nameEmailMap = new Map();\r\nconst coordinatorMap = new Map();\r\n\r\nconst templates = [\r\n  { title: \"Template A\", message: \"template content a\" },\r\n  { title: \"Template B\", message: \"template content b\" },\r\n  { title: \"Template C\", message: \"template content c\" },\r\n  { title: \"None\", message: \"\" }\r\n];\r\n\r\nclass EmailModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      fullWidth: true,\r\n      maxWidth: \"lg\",\r\n      email_recipients: [],\r\n      email_cc: [],\r\n      email_bcc: [],\r\n      email_subject: \"\",\r\n      email_template: \"\",\r\n      email_message: \"\",\r\n      context: \"\",\r\n      available_recipients: [],\r\n      templatesNew: []\r\n    };\r\n    this.handleSendEmail = this.handleSendEmail.bind(this);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n\r\n    //get all coordinators\r\n\r\n    console.log(store.getState().subjects);\r\n    var subjects = store.getState().subjects;\r\n    var coordinators = [];\r\n\r\n    subjects.map(indCoor => coordinators.push(indCoor.coordinator.firstName));\r\n    console.log(\"new here\");\r\n    console.log(coordinators);\r\n\r\n    for (var x = 0; x < coordinators.length; x++) {\r\n      var fullName = coordinators[x].firstName + \" \" + coordinators[x].lastName;\r\n      var fullNameRole = fullName + \" (Coordinator)\";\r\n      nameEmailMap.set(fullNameRole, coordinators[x].email);\r\n      this.state.available_recipients.push(fullNameRole);\r\n    }\r\n\r\n    //get the templates\r\n\r\n    axios\r\n      .get(`http://172.26.88.142:3000/api/template`)\r\n      .then(function(response) {\r\n        console.log(response.data);\r\n        var templates = response.data;\r\n\r\n        Object.keys(templates).forEach(function(key) {\r\n          console.log(key, templates[key].title);\r\n          templatesNewArray.push(templates[key].title);\r\n          templatesMap.set(templates[key].title, templates[key].message);\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    console.log(this.state.templates);\r\n\r\n    //check the URL to determine the context of the email\r\n    var url = window.location.href;\r\n    var split = url.split(\"/\");\r\n    var context = split[4];\r\n    console.log(split[4]);\r\n\r\n    var clientName =\r\n      store.getState().proposal.client.firstName +\r\n      \" \" +\r\n      store.getState().proposal.client.lastName +\r\n      \" (Client)\";\r\n    var clientEmail = store.getState().proposal.client.email;\r\n    var clientSecondaryName =\r\n      store.getState().proposal.client.secondaryContactFirstName +\r\n      \" \" +\r\n      store.getState().proposal.client.secondaryContactLastName +\r\n      \" (Secondary Contact)\";\r\n    var clientSecondaryEmail = store.getState().proposal.client\r\n      .secondaryContactEmail;\r\n\r\n    if (split[4] == \"proposals\") {\r\n      nameEmailMap.set(clientName, clientEmail);\r\n      this.state.available_recipients.push(clientName);\r\n\r\n      nameEmailMap.set(clientSecondaryName, clientSecondaryEmail);\r\n\r\n      for (const x in tempCoordinatorNameArray) {\r\n        this.state.email_recipients.push(x);\r\n      }\r\n\r\n      this.state.available_recipients.push(clientSecondaryName);\r\n    } else if (split[4] == \"projects\") {\r\n      for (const x in tempCoordinatorNameArray) {\r\n        this.state.email_recipients.push(x);\r\n      }\r\n      this.state.available_recipients.push(clientName, clientSecondaryName);\r\n      nameEmailMap.set(\r\n        store.getState().proposal.client.firstName,\r\n        store.getState().proposal.client.email\r\n      );\r\n\r\n      var teams = store.getState().project.products;\r\n      var students = [];\r\n\r\n      teams.map(individualTeam => students.push(individualTeam.students));\r\n\r\n      var studentsFlattened = students.flat();\r\n\r\n      studentsFlattened.map(student => {\r\n        nameEmailMap.set(student.name, student.email);\r\n        this.state.available_recipients.push(student.name);\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ available_recipients: [] });\r\n    this.setState({ email_recipients: [] });\r\n    this.setState({ email_cc: [] });\r\n    nameEmailMap.clear();\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange = (emailField, event) => {\r\n    if (emailField == \"email_recipients\") {\r\n      this.setState({ email_recipients: event.target.value });\r\n    } else if (emailField == \"email_cc\") {\r\n      this.setState({ email_cc: event.target.value });\r\n    } else if (emailField == \"email_bcc\") {\r\n      this.setState({ email_bcc: event.target.value });\r\n    } else if (emailField == \"email_subject\") {\r\n      this.setState({ email_subject: event.target.value });\r\n    } else if (emailField == \"email_template\") {\r\n      this.setState({ templatesNew: event.target.value });\r\n      let email_message = this.getEmailMessage(event.target.value);\r\n      this.setState({ email_message: email_message });\r\n    }\r\n  };\r\n\r\n  handleChangeMultiple = (emailField, event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    if (emailField == \"email_recipients\") {\r\n      this.setState({ email_recipients: value });\r\n    } else if (emailField == \"email_cc\") {\r\n      this.setState({ email_cc: value });\r\n    } else if (emailField == \"email_bcc\") {\r\n      this.setState({ email_bcc: value });\r\n    }\r\n  };\r\n\r\n  getEmailMessage(template_title) {\r\n    // for (var i = 0; i < templates.length; i++) {\r\n    //   if (templates[i].title === template_title) {\r\n    //     return templates[i].message;\r\n    //   }\r\n    // }\r\n    return templatesMap.get(template_title);\r\n  }\r\n\r\n  handleSendEmail() {\r\n    var emails = [];\r\n    var emailscc = [];\r\n    this.state.email_recipients.map(name =>\r\n      emails.push(nameEmailMap.get(name))\r\n    );\r\n\r\n    this.state.email_cc.map(name => emailscc.push(nameEmailMap.get(name)));\r\n\r\n    console.log(emails);\r\n\r\n    //send multiple posts\r\n\r\n    axios\r\n      .post(`http://35.197.167.244/message`, {\r\n        from: \"CIS Project Management\",\r\n        to: emails,\r\n        subject: this.state.email_subject,\r\n        html: constructNormalEmail(this.state.email_message),\r\n        projectType: \"fdafdsa\",\r\n        cc: emailscc,\r\n        projectID: \"\"\r\n      })\r\n      .then(function(response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    alert(\"sending email\");\r\n    this.setState({ email_recipients: [] });\r\n    this.setState({ available_recipients: [] });\r\n    nameEmailMap.clear();\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  unsubscribe = store.subscribe(this.handleChange);\r\n\r\n  _handleEmailContentChange(e) {\r\n    const email_message = e.target.value;\r\n    this.setState({ email_message: email_message });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Typography gutterBottom />\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Email\"\r\n          className={classes.fab}\r\n          onClick={this.handleClickOpen}\r\n        >\r\n          <EmailIcon />\r\n        </Fab>\r\n        <Dialog\r\n          fullWidth={this.state.fullWidth}\r\n          maxWidth={this.state.maxWidth}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n          <DialogTitle onClose={this.handleClose}>Send Email</DialogTitle>\r\n\r\n          <Divider />\r\n\r\n          <DialogContent>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"email_recipients\">To</InputLabel>\r\n                <Select\r\n                  className={classes.selectField}\r\n                  autoWidth=\"true\"\r\n                  multiple\r\n                  value={this.state.email_recipients}\r\n                  onChange={e => this.handleChange(\"email_recipients\", e)}\r\n                  input={<Input id=\"email_recipients\" />}\r\n                  renderValue={selected => (\r\n                    <div className={classes.chips}>\r\n                      {selected.map(value => (\r\n                        <Chip\r\n                          key={value}\r\n                          label={value}\r\n                          className={classes.chip}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {this.state.available_recipients.map(name => (\r\n                    <MenuItem key={name} value={name} style={{ width: \"100%\" }}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"email_cc\">CC</InputLabel>\r\n                <Select\r\n                  className={classes.selectField}\r\n                  autoWidth=\"true\"\r\n                  multiple\r\n                  value={this.state.email_cc}\r\n                  onChange={e => this.handleChange(\"email_cc\", e)}\r\n                  input={<Input id=\"email_cc\" />}\r\n                  renderValue={selected => (\r\n                    <div className={classes.chips}>\r\n                      {selected.map(value => (\r\n                        <Chip\r\n                          key={value}\r\n                          label={value}\r\n                          className={classes.chip}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {this.state.available_recipients.map(name => (\r\n                    <MenuItem key={name} value={name} style={{ width: \"100%\" }}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"email_bcc\">BCC</InputLabel>\r\n                <Select\r\n                  className={classes.selectField}\r\n                  autoWidth=\"true\"\r\n                  multiple\r\n                  value={this.state.email_bcc}\r\n                  onChange={e => this.handleChange(\"email_bcc\", e)}\r\n                  input={<Input id=\"email_bcc\" />}\r\n                  renderValue={selected => (\r\n                    <div className={classes.chips}>\r\n                      {selected.map(value => (\r\n                        <Chip\r\n                          key={value}\r\n                          label={value}\r\n                          className={classes.chip}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {names.map(name => (\r\n                    <MenuItem key={name} value={name} style={{ width: \"100%\" }}>\r\n                      {name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <TextField\r\n                id=\"standard-with-placeholder\"\r\n                label=\"Please enter a subject\"\r\n                placeholder=\"\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                style={{ maxWidth: 300, minWidth: 120 }}\r\n                onChange={e => this.handleChange(\"email_subject\", e)}\r\n              />\r\n              <br />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"email_template\">\r\n                  Choose template if applicable\r\n                </InputLabel>\r\n                <Select\r\n                  className={classes.selectField}\r\n                  autoWidth=\"true\"\r\n                  value={this.state.templatesNew}\r\n                  onChange={e => this.handleChange(\"email_template\", e)}\r\n                  input={<Input id=\"email_template\" />}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {templatesNewArray.map(template => (\r\n                    <MenuItem\r\n                      key={template}\r\n                      value={template}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      {template}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Divider style={{ marginTop: \"1%\", marginBottom: \"1%\" }} />\r\n              <InputBase\r\n                fullWidth\r\n                id=\"message\"\r\n                className={classes.margin}\r\n                multiline=\"true\"\r\n                rows=\"10\"\r\n                value={this.state.email_message}\r\n                onChange={e => this._handleEmailContentChange(e)}\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleSendEmail}\r\n              className={classes.sendButton}\r\n            >\r\n              Send\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleClose}\r\n              color=\"primary\"\r\n              className={classes.discardButton}\r\n            >\r\n              Discard\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(EmailModal);\r\n"]},"metadata":{},"sourceType":"module"}