{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Notes\\\\AddNoteModal.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Fab from \"@material-ui/core/Fab\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Divider } from \"@material-ui/core\";\nimport store from \"../../../store\";\nimport { addNoteAction } from \"../../../store/actionCreators\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      outline: \"none\"\n    },\n    formControl: {\n      margin: 2,\n      minWidth: 120\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing.unit,\n      top: theme.spacing.unit,\n      color: theme.palette.grey[500]\n    },\n    fab: {\n      backgroundColor: \"#094183\",\n      \"&:hover\": {\n        backgroundColor: \"#4074B2\"\n      },\n      boxShadow: \"none\"\n    },\n    addButton: {\n      backgroundColor: \"#094183\",\n      \"&:hover\": {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    discardButton: {\n      color: \"#094183\"\n    },\n    note: {\n      width: \"100%\",\n      marginTop: 5,\n      paddingBottom: 0\n    }\n  };\n};\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: \"87%\"\n    }\n  },\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null,\n  dense: \"true\"\n};\n\nvar AddNoteModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNoteModal, _React$Component);\n\n  function AddNoteModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNoteModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNoteModal).call(this, props));\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._handleAddNote = function () {\n      var _this$props = _this.props,\n          objectType = _this$props.objectType,\n          object = _this$props.object;\n      var noteMsg = document.getElementById(\"note\").value;\n\n      if (noteMsg) {\n        var newNote = {\n          text: noteMsg,\n          date: Date.now().toString() // Date is represented as an integer, stored as a string\n\n        };\n        var notes = object.notes;\n\n        if (notes) {\n          notes.push(newNote);\n        } else {\n          notes = [newNote];\n        }\n\n        object.notes = notes; // Send PUT request\n\n        var addNoteAct = addNoteAction(objectType, object._id, object);\n        store.dispatch(addNoteAct); // Close window\n\n        _this._handleClose();\n      } else {\n        alert(\"Please provide a valid note.\");\n      }\n    };\n\n    _this.state = {\n      open: false,\n      fullWidth: true\n    };\n    return _this;\n  }\n\n  _createClass(AddNoteModal, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"Add a note\",\n        className: classes.fab,\n        onClick: this._handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(NoteAddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: this.state.open,\n        onClose: this._handleClose,\n        fullWidth: this.state.fullWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        onClose: this._handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Add a note\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.note,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(InputBase, {\n        fullWidth: true,\n        id: \"note\",\n        className: classes.note,\n        multiline: true,\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this._handleAddNote,\n        className: classes.addButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Button, {\n        onClick: this._handleClose,\n        color: \"primary\",\n        className: classes.discardButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Discard\"))));\n    }\n  }]);\n\n  return AddNoteModal;\n}(React.Component);\n\nexport default withStyles(styles)(AddNoteModal);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Notes\\AddNoteModal.js"],"names":["React","withStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogTitle","Fab","NoteAddIcon","InputBase","Divider","store","addNoteAction","rand","Math","round","random","getModalStyle","top","left","transform","styles","theme","root","flexGrow","display","flexWrap","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","paddingLeft","outline","formControl","margin","minWidth","chips","closeButton","position","right","unit","color","grey","fab","addButton","discardButton","note","width","marginTop","paddingBottom","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","dense","AddNoteModal","props","_handleClickOpen","setState","open","_handleClose","_handleAddNote","objectType","object","noteMsg","document","getElementById","value","newNote","text","date","Date","now","toString","notes","push","addNoteAct","_id","dispatch","alert","state","fullWidth","classes","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {Divider} from \"@material-ui/core\";\r\nimport store from \"../../../store\";\r\nimport {addNoteAction} from \"../../../store/actionCreators\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4),\r\n        paddingLeft: theme.spacing(4),\r\n        outline: \"none\"\r\n    },\r\n    formControl: {\r\n        margin: 2,\r\n        minWidth: 120,\r\n    },\r\n    chips: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        right: theme.spacing.unit,\r\n        top: theme.spacing.unit,\r\n        color: theme.palette.grey[500]\r\n    },\r\n    fab: {\r\n        backgroundColor: \"#094183\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#4074B2\"\r\n        },\r\n        boxShadow: \"none\"\r\n    },\r\n    addButton: {\r\n        backgroundColor: \"#094183\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#4074B2\"\r\n        }\r\n    },\r\n    discardButton: {\r\n        color: \"#094183\"\r\n    },\r\n    note: {\r\n        width: \"100%\",\r\n        marginTop: 5,\r\n        paddingBottom: 0,\r\n    }\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: \"87%\"\r\n        }\r\n    },\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n    transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n    },\r\n    getContentAnchorEl: null,\r\n    dense: \"true\"\r\n};\r\n\r\nclass AddNoteModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            fullWidth: true\r\n        };\r\n    }\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _handleAddNote = () => {\r\n        const {objectType, object} = this.props;\r\n\r\n        var noteMsg = document.getElementById(\"note\").value;   \r\n\r\n        if (noteMsg) {\r\n            var newNote = {\r\n                text: noteMsg,\r\n                date: Date.now().toString(),    // Date is represented as an integer, stored as a string\r\n            };\r\n            var notes = object.notes;\r\n            if (notes) {\r\n                notes.push(newNote);\r\n            } else {\r\n                notes = [newNote];\r\n            }\r\n            object.notes = notes;\r\n\r\n            // Send PUT request\r\n            const addNoteAct = addNoteAction(objectType, object._id, object);\r\n            store.dispatch(addNoteAct);\r\n\r\n            // Close window\r\n            this._handleClose();\r\n        } else {\r\n            alert(\"Please provide a valid note.\");\r\n        }\r\n        \r\n        \r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Typography gutterBottom/>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    aria-label=\"Add a note\"\r\n                    className={classes.fab}\r\n                    onClick={this._handleClickOpen}\r\n                >\r\n                    <NoteAddIcon/>\r\n                </Fab>\r\n                <Dialog\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                    open={this.state.open}\r\n                    onClose={this._handleClose}\r\n                    fullWidth={this.state.fullWidth}\r\n                >\r\n                    <DialogTitle onClose={this._handleClose}>Add a\r\n                        note</DialogTitle>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogContent>\r\n                        <form className={classes.note} noValidate\r\n                              autoComplete=\"off\">\r\n                            <InputBase\r\n                                fullWidth\r\n                                id=\"note\"\r\n                                className={classes.note}\r\n                                multiline={true}\r\n                                rows=\"5\"\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n\r\n                    <Divider/>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this._handleAddNote}\r\n                            className={classes.addButton}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this._handleClose}\r\n                            color=\"primary\"\r\n                            className={classes.discardButton}\r\n                        >\r\n                            Discard\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddNoteModal);\r\n\r\n"]},"metadata":{},"sourceType":"module"}