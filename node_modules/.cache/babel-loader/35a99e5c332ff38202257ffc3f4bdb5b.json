{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Client\\\\ClientPageModal.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { grey, red } from \"@material-ui/core/colors\";\nimport ErrorOutlinedIcon from '@material-ui/icons/ErrorOutlined';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport ClientDetails from \"./modalcomponents/ClientDetails\";\nimport ClientOrg from \"./modalcomponents/ClientOrg\";\nimport Notes from \"../Notes/Notes\";\nimport store from \"../../../store\";\nimport { updateClientAction } from \"../../../store/actionCreators\";\nimport EditClientModal from \"./EditClientModal\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      outline: \"none\"\n    },\n    editButton: {\n      color: \"#094183\"\n    },\n    closeButton: {\n      backgroundColor: \"#094183\",\n      color: \"#FFFFFF\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    iconFalse: {\n      marginLeft: 20,\n      marginBottom: 10,\n      color: grey[500],\n      '&:hover': {\n        color: red[500]\n      },\n      fontSize: 35,\n      verticalAlign: 'middle'\n    },\n    iconTrue: {\n      marginLeft: 20,\n      marginBottom: 10,\n      '&:hover': {\n        color: grey[500]\n      },\n      fontSize: 35,\n      verticalAlign: 'middle',\n      color: red[500]\n    },\n    chipFlag: {\n      color: red[500]\n    },\n    fab: {\n      backgroundColor: \"#FFFFFF\",\n      color: grey[700],\n      \"&:hover\": {\n        backgroundColor: grey[400],\n        color: grey[800]\n      },\n      boxShadow: \"none\"\n    }\n  };\n};\n\nvar ClientPageModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClientPageModal, _React$Component);\n\n  function ClientPageModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientPageModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientPageModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: \"xl\",\n      client: \"\",\n      clientFlag: _this.props.client.flag\n    };\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._concatenateNames = function (firstName, lastName) {\n      return firstName + \" \" + lastName;\n    };\n\n    _this._handleClientFlagUpdate = function () {\n      // Invert clientFlag value and update state and DB\n      var currentFlag = !_this.state.clientFlag;\n\n      _this.setState({\n        clientFlag: currentFlag\n      });\n\n      var client = _this.props.client;\n      client.flag = currentFlag; // Send PUT request\n\n      var updateClientAct = updateClientAction(client._id, client);\n      store.dispatch(updateClientAct);\n    };\n\n    _this._renderSuitableButton = function (objType) {\n      if (objType === \"allClients\") {\n        return React.createElement(Fab, {\n          color: \"default\",\n          \"aria-label\": \"View/Edit\",\n          className: classes.fab,\n          onClick: _this._handleClickOpen,\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(EditIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Chip, {\n          onClick: _this._handleClickOpen,\n          icon: client.flag ? React.createElement(ErrorOutlinedIcon, {\n            className: classes.chipFlag,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }) : React.createElement(FaceIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }),\n          label: _this._concatenateNames(client.firstName, client.lastName),\n          variant: \"outlined\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ClientPageModal, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var flagIcon;\n      var client = this.props.client;\n      var objType = this.props.objType;\n      var objID = this.props.objID;\n\n      if (client.flag) {\n        flagIcon = React.createElement(ErrorOutlinedIcon, {\n          className: classes.iconTrue,\n          onClick: this._handleClientFlagUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        });\n      } else {\n        flagIcon = React.createElement(ErrorOutlineOutlinedIcon, {\n          className: classes.iconFalse,\n          onClick: this._handleClientFlagUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n\n      if (!client) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.open,\n        onClose: this._handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"#094183\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this._concatenateNames(client.firstName, client.lastName), flagIcon), React.createElement(ClientDetails, {\n        email: client.email,\n        technicalAbility: client.technicalAbility,\n        contactNumber: client.contactNumber,\n        secondaryContactName: this._concatenateNames(client.secondaryContactFirstName, client.secondaryContactLastName),\n        secondaryContactEmail: client.secondaryContactEmail,\n        secondaryContactNumber: client.secondaryContactNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        style: {\n          marginBottom: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ClientOrg, {\n        orgName: client.organisation.name,\n        orgSize: client.organisation.size,\n        industry: client.organisation.industry,\n        description: client.organisation.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Notes, {\n        notes: client.notes,\n        object: client,\n        objectType: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleClose,\n        className: classes.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Close\"), React.createElement(EditClientModal, {\n        client: client,\n        objType: objType,\n        objID: objID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ClientPageModal;\n}(React.Component);\n\nexport default withStyles(styles)(ClientPageModal);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Client\\ClientPageModal.js"],"names":["React","withStyles","Button","Chip","FaceIcon","Grid","Paper","Dialog","DialogActions","DialogContent","grey","red","ErrorOutlinedIcon","ErrorOutlineOutlinedIcon","ClientDetails","ClientOrg","Notes","store","updateClientAction","EditClientModal","styles","theme","root","flexGrow","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","paddingLeft","outline","editButton","color","closeButton","iconFalse","marginLeft","marginBottom","fontSize","verticalAlign","iconTrue","chipFlag","fab","ClientPageModal","state","open","fullWidth","maxWidth","client","clientFlag","props","flag","_handleClickOpen","setState","_handleClose","_concatenateNames","firstName","lastName","_handleClientFlagUpdate","currentFlag","updateClientAct","_id","dispatch","_renderSuitableButton","objType","classes","flagIcon","objID","email","technicalAbility","contactNumber","secondaryContactFirstName","secondaryContactLastName","secondaryContactEmail","secondaryContactNumber","organisation","name","size","industry","description","notes","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport {grey, red} from \"@material-ui/core/colors\";\r\nimport ErrorOutlinedIcon from '@material-ui/icons/ErrorOutlined';\r\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\r\nimport ClientDetails from \"./modalcomponents/ClientDetails\";\r\nimport ClientOrg from \"./modalcomponents/ClientOrg\";\r\nimport Notes from \"../Notes/Notes\";\r\nimport store from \"../../../store\";\r\nimport {updateClientAction} from \"../../../store/actionCreators\";\r\nimport EditClientModal from \"./EditClientModal\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4),\r\n        paddingLeft: theme.spacing(4),\r\n        outline: \"none\"\r\n    },\r\n    editButton: {\r\n        color: \"#094183\",\r\n    },\r\n    closeButton: {\r\n        backgroundColor: \"#094183\",\r\n        color: \"#FFFFFF\",\r\n        '&:hover': {\r\n            backgroundColor: \"#4074B2\",\r\n        },\r\n    },\r\n    iconFalse: {\r\n        marginLeft: 20,\r\n        marginBottom: 10,\r\n        color: grey[500],\r\n        '&:hover': {\r\n            color: red[500],\r\n        },\r\n        fontSize: 35,\r\n        verticalAlign: 'middle',\r\n    },\r\n    iconTrue: {\r\n        marginLeft: 20,\r\n        marginBottom: 10,\r\n        '&:hover': {\r\n            color: grey[500],\r\n        },\r\n        fontSize: 35,\r\n        verticalAlign: 'middle',\r\n        color: red[500]\r\n    },\r\n    chipFlag: {\r\n        color: red[500]\r\n    },\r\n    fab: {\r\n        backgroundColor: \"#FFFFFF\",\r\n        color: grey[700],\r\n        \"&:hover\": {\r\n            backgroundColor: grey[400],\r\n            color: grey[800]\r\n        },\r\n        boxShadow: \"none\"\r\n    }\r\n});\r\n\r\nclass ClientPageModal extends React.Component {\r\n    state = {\r\n        open: false,\r\n        fullWidth: true,\r\n        maxWidth: \"xl\",\r\n        client: \"\",\r\n        clientFlag: this.props.client.flag\r\n    };\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _concatenateNames = (firstName, lastName) => {\r\n        return (firstName + \" \" + lastName);\r\n    };\r\n\r\n    _handleClientFlagUpdate = () => {\r\n        // Invert clientFlag value and update state and DB\r\n        var currentFlag = !this.state.clientFlag;\r\n        this.setState({clientFlag: currentFlag});\r\n\r\n        let client = this.props.client;\r\n        client.flag = currentFlag;\r\n\r\n        // Send PUT request\r\n        const updateClientAct = updateClientAction(client._id, client);\r\n        store.dispatch(updateClientAct);\r\n    };\r\n\r\n    // Return a view icon on allClients page, and a chip with clients name for all other pages.\r\n    _renderSuitableButton = (objType) => {\r\n        if (objType === \"allClients\") {\r\n            return (\r\n                <Fab\r\n                    color=\"default\"\r\n                    aria-label=\"View/Edit\"\r\n                    className={classes.fab}\r\n                    onClick={this._handleClickOpen}\r\n                    size=\"small\"\r\n                >\r\n                    <EditIcon />\r\n                </Fab>\r\n            )\r\n        } else {\r\n            return (\r\n                <Chip\r\n                    onClick={this._handleClickOpen}\r\n                    icon={client.flag ? <ErrorOutlinedIcon className={classes.chipFlag}/> : <FaceIcon/>}\r\n                    label={this._concatenateNames(client.firstName, client.lastName)}\r\n                    variant=\"outlined\"\r\n                    align=\"center\"\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        var flagIcon;\r\n        var client = this.props.client;\r\n        var objType = this.props.objType;\r\n        var objID = this.props.objID;\r\n\r\n        if (client.flag) {\r\n            flagIcon = <ErrorOutlinedIcon className={classes.iconTrue}\r\n                                          onClick={this._handleClientFlagUpdate}/>\r\n        } else {\r\n            flagIcon = <ErrorOutlineOutlinedIcon className={classes.iconFalse}\r\n                                                 onClick={this._handleClientFlagUpdate}/>\r\n        }\r\n\r\n        if (!client) {\r\n            return <div/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <Dialog\r\n                    fullWidth={this.state.fullWidth}\r\n                    maxWidth={this.state.maxWidth}\r\n                    open={this.state.open}\r\n                    onClose={this._handleClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                >\r\n                    <DialogContent>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}>\r\n                                    <h1 style={{color: \"#094183\"}}>\r\n                                        {this._concatenateNames(client.firstName, client.lastName)}{flagIcon}\r\n                                    </h1>\r\n                                    <ClientDetails\r\n                                        email={client.email}\r\n                                        technicalAbility={client.technicalAbility}\r\n                                        contactNumber={client.contactNumber}\r\n                                        secondaryContactName={this._concatenateNames(client.secondaryContactFirstName, client.secondaryContactLastName)}\r\n                                        secondaryContactEmail={client.secondaryContactEmail}\r\n                                        secondaryContactNumber={client.secondaryContactNumber}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <Grid style={{marginBottom: \"5%\"}}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <ClientOrg\r\n                                            orgName={client.organisation.name}\r\n                                            orgSize={client.organisation.size}\r\n                                            industry={client.organisation.industry}\r\n                                            description={client.organisation.description}\r\n                                        />\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Notes\r\n                                            notes={client.notes}\r\n                                            object={client}\r\n                                            objectType={\"client\"}\r\n                                        />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this._handleClose}\r\n                                className={classes.closeButton}>\r\n                            Close\r\n                        </Button>\r\n                        <EditClientModal \r\n                            client={client}\r\n                            objType={objType}\r\n                            objID={objID} />\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ClientPageModal);\r\n"]},"metadata":{},"sourceType":"module"}