{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\IndividualProject\\\\ProjectInfo\\\\AssignToSupervisor.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport store from \"../../../../../store\";\nimport { updateProjectAction } from \"../../../../../store/actionCreators\";\nimport { grey } from \"@material-ui/core/colors\";\n\nvar styles = function styles(theme) {\n  return {\n    showSup: _defineProperty({\n      overflow: \"auto\",\n      textAlign: \"justify\",\n      paddingLeft: 10,\n      paddingTop: 5,\n      paddingBottom: 5,\n      marginTop: \"2%\",\n      marginBottom: \"3%\",\n      height: 35,\n      marginRight: 10,\n      color: \"#000000\"\n    }, theme.breakpoints.down(\"sm\"), {\n      marginRight: 30\n    }),\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      minWidth: 120\n    },\n    assignButton: {\n      color: \"#ffffff\",\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\",\n        color: \"#ffffff\"\n      }\n    }\n  };\n};\n\nvar AssignToSupervisor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignToSupervisor, _React$Component);\n\n  function AssignToSupervisor(props) {\n    var _this;\n\n    _classCallCheck(this, AssignToSupervisor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignToSupervisor).call(this, props));\n\n    _this._showSupervisor = function (supervisorId) {\n      var supervisors = _this.props.supervisors;\n      var supervisorName = \"NO SUPERVISOR ASSIGNED\";\n      supervisors.forEach(function (sp) {\n        if (sp._id === supervisorId) {\n          supervisorName = sp.firstName + \" \" + sp.lastName;\n        }\n      });\n      return supervisorName;\n    };\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._handleSelect = function (e) {\n      _this.setState({\n        selectedSupervisorId: e.target.value\n      });\n    };\n\n    _this._handleOK = function () {\n      var selectedSupervisorId = _this.state.selectedSupervisorId;\n      var _this$props = _this.props,\n          project = _this$props.project,\n          supervisors = _this$props.supervisors;\n      project.supervisorId = selectedSupervisorId;\n      var updateProjAction = updateProjectAction(project._id, project);\n      store.dispatch(updateProjAction);\n\n      _this.setState({\n        selectedSupervisorId: \"\",\n        open: false\n      });\n    };\n\n    _this.state = {\n      selectedSupervisorId: \"\",\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(AssignToSupervisor, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          project = _this$props2.project,\n          supervisors = _this$props2.supervisors;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          marginTop: 10,\n          marginRight: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"left\",\n        color: \"textSecondary\",\n        variant: \"h6\",\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Supervisor:\")), React.createElement(Grid, {\n        item: true,\n        style: {\n          marginTop: 10\n        },\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleClickOpen,\n        className: classes.assignButton,\n        variant: \"contained\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"(Re) Assign\"))), React.createElement(Paper, {\n        className: classes.showSup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this._showSupervisor(project.supervisorId)), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: open,\n        onClose: this._handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Choose one supervisor to assign to\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        style: {\n          color: grey[800]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Supervisors\"), React.createElement(Select, {\n        native: true,\n        onChange: function onChange(e) {\n          return _this2._handleSelect(e);\n        },\n        input: React.createElement(Input, {\n          id: \"sp-native-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"None\"), supervisors.map(function (sp, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: sp._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, sp.firstName + \" \" + sp.lastName);\n      }))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this._handleOK,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return AssignToSupervisor;\n}(React.Component);\n\nAssignToSupervisor.propTypes = {\n  classes: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired,\n  supervisors: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(AssignToSupervisor);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\IndividualProject\\ProjectInfo\\AssignToSupervisor.js"],"names":["React","PropTypes","withStyles","Typography","Button","Dialog","DialogTitle","DialogContent","FormControl","Select","Input","DialogActions","Paper","Grid","store","updateProjectAction","grey","styles","theme","showSup","overflow","textAlign","paddingLeft","paddingTop","paddingBottom","marginTop","marginBottom","height","marginRight","color","breakpoints","down","container","display","flexWrap","formControl","minWidth","assignButton","backgroundColor","AssignToSupervisor","props","_showSupervisor","supervisorId","supervisors","supervisorName","forEach","sp","_id","firstName","lastName","_handleClickOpen","setState","open","_handleClose","_handleSelect","e","selectedSupervisorId","target","value","_handleOK","state","project","updateProjAction","dispatch","classes","fontWeight","map","index","Component","propTypes","object","isRequired","array"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport store from \"../../../../../store\";\r\nimport {updateProjectAction} from \"../../../../../store/actionCreators\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nconst styles = theme => ({\r\n    showSup: {\r\n        overflow: \"auto\",\r\n        textAlign: \"justify\",\r\n        paddingLeft: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        marginTop: \"2%\",\r\n        marginBottom: \"3%\",\r\n        height: 35,\r\n        marginRight: 10,\r\n        color: \"#000000\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginRight: 30\r\n        },\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    formControl: {\r\n        minWidth: 120\r\n    },\r\n    assignButton: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#094183\",\r\n        '&:hover': {\r\n            backgroundColor: \"#4074B2\",\r\n            color: \"#ffffff\",\r\n        }\r\n    },\r\n});\r\n\r\nclass AssignToSupervisor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedSupervisorId: \"\",\r\n            open: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {classes, project, supervisors} = this.props;\r\n        const {open} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item style={{marginTop: 10, marginRight: 30}}>\r\n                        <Typography align=\"left\" color=\"textSecondary\"\r\n                                    variant=\"h6\" style={{fontWeight: \"bold\"}}>\r\n                            Supervisor:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{marginTop: 10}} align=\"center\">\r\n                        <Button\r\n                            onClick={this._handleClickOpen}\r\n                            className={classes.assignButton}\r\n                            variant=\"contained\"\r\n                        >\r\n                            (Re) Assign\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Paper className={classes.showSup}>\r\n                    {this._showSupervisor(project.supervisorId)}\r\n                </Paper>\r\n                <Dialog\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                    open={open}\r\n                    onClose={this._handleClose}\r\n                >\r\n                    <DialogTitle>\r\n                        Choose one supervisor to assign to\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <h6 style={{color: grey[800]}}>\r\n                                    Supervisors\r\n                                </h6>\r\n                                <Select\r\n                                    native\r\n                                    onChange={e => this._handleSelect(e)}\r\n                                    input={<Input id=\"sp-native-simple\"/>}\r\n                                >\r\n                                    <option value=\"\">None</option>\r\n                                    {supervisors.map((sp, index) => (\r\n                                        <option\r\n                                            key={index}\r\n                                            value={sp._id}\r\n                                        >\r\n                                            {sp.firstName + \" \" + sp.lastName}\r\n                                        </option>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this._handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this._handleOK} color=\"primary\">\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _showSupervisor = (supervisorId) => {\r\n        const {supervisors} = this.props;\r\n        let supervisorName = \"NO SUPERVISOR ASSIGNED\";\r\n        supervisors.forEach(sp => {\r\n            if (sp._id === supervisorId) {\r\n                supervisorName = sp.firstName + \" \" + sp.lastName;\r\n            }\r\n        });\r\n        return supervisorName;\r\n    };\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _handleSelect = e => {\r\n        this.setState({selectedSupervisorId: e.target.value});\r\n    };\r\n\r\n    _handleOK = () => {\r\n        const {selectedSupervisorId} = this.state;\r\n        const {project, supervisors} = this.props;\r\n        project.supervisorId = selectedSupervisorId;\r\n        const updateProjAction = updateProjectAction(project._id, project);\r\n        store.dispatch(updateProjAction);\r\n        this.setState({\r\n            selectedSupervisorId: \"\",\r\n            open: false\r\n        });\r\n    };\r\n\r\n}\r\n\r\nAssignToSupervisor.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    supervisors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AssignToSupervisor);\r\n"]},"metadata":{},"sourceType":"module"}