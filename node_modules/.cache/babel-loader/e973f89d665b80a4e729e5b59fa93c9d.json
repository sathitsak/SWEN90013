{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Proposals\\\\AllProposals\\\\RejectedProposals.js\";\n\n/**\r\n * This component contains all reject proposals. It is entered via a \"View Rejected Proposals\" button on the Proposals page.\r\n * Author: Reyna Tan\r\n * Date: 07/05/2019\r\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport store from \"../../../../store\";\nimport { getProposalList } from \"../../../../api\";\nimport { getAllProposalsAction } from \"../../../../store/actionCreators\";\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: \"#232FFD\",\n      marginLeft: 100\n    },\n    link: {\n      textDecoration: \"none\"\n    }\n  };\n});\n\nfunction TablePaginationActions(props) {\n  var classes = useStyles1();\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onChangePage = props.onChangePage;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"First Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"Previous Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Next Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Last Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nvar useStyles2 = function useStyles2(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: 100\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar status = {\n  new: \"new\",\n  approved: \"approved\",\n  reject: \"reject\"\n};\n\nvar RejectedProposals =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RejectedProposals, _React$Component);\n\n  function RejectedProposals(props) {\n    var _this;\n\n    _classCallCheck(this, RejectedProposals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RejectedProposals).call(this, props));\n\n    _this._filterProposalsByStatus = function (status) {\n      //TODO: filter by user\n      var proposals = _this.state.proposals;\n      var targetProposals = [];\n      proposals.forEach(function (p) {\n        // First check if valid before sending through\n        if ('client' in p) {\n          if ('organisation' in p.client) {\n            if (p.status === status) {\n              targetProposals.push(p);\n            }\n          }\n        }\n      });\n      return targetProposals;\n    };\n\n    _this.state = store.getState();\n    _this._handleStoreChange = _this._handleStoreChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    store.subscribe(_this._handleStoreChange);\n    return _this;\n  }\n\n  _createClass(RejectedProposals, [{\n    key: \"_handleStoreChange\",\n    value: function _handleStoreChange() {\n      this.setState(store.getState());\n    }\n  }, {\n    key: \"_reqTodoList\",\n    value: function () {\n      var _reqTodoList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result, action;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getProposalList();\n\n              case 2:\n                result = _context.sent;\n                action = getAllProposalsAction(result);\n                store.dispatch(action);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _reqTodoList() {\n        return _reqTodoList2.apply(this, arguments);\n      }\n\n      return _reqTodoList;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._reqTodoList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = useStyles2();\n\n      var rejected = this._filterProposalsByStatus(status.reject);\n\n      var emptyRows = this.rowsPerPage - Math.min(this.rowsPerPage, rejected.length - this.page * this.rowsPerPage);\n\n      function handleChangePage(event, newPage) {\n        this.setPage(newPage);\n      }\n\n      function handleChangeRowsPerPage(event) {\n        this.setRowsPerPage(parseInt(event.target.value, 10));\n      }\n\n      function handleClick(event, id) {\n        window.location.href = \"/dashboard/proposals/\".concat(id);\n      }\n\n      return React.createElement(Paper, {\n        className: useStyles2.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: useStyles2.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          width: \"20%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(TableCell, {\n        align: \"left\",\n        style: {\n          width: \"15%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Client\"), React.createElement(TableCell, {\n        align: \"left\",\n        style: {\n          width: \"15%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Organisation\"), React.createElement(TableCell, {\n        align: \"left\",\n        style: {\n          width: \"50%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Project Description\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this._filterProposalsByStatus(status.reject).map(function (p) {\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return handleClick(event, p._id);\n          },\n          key: p._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, p.name), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, p.client.firstName + \" \" + p.client.lastName), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, p.client.organisation.name), React.createElement(TableCell, {\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, p.outlineOfProject));\n      })))));\n    }\n  }]);\n\n  return RejectedProposals;\n}(React.Component);\n\nexport default withStyles(useStyles2)(RejectedProposals);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Proposals\\AllProposals\\RejectedProposals.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","withStyles","TableHead","store","getProposalList","getAllProposalsAction","useStyles1","theme","root","flexShrink","color","marginLeft","link","textDecoration","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","propTypes","number","isRequired","func","useStyles2","width","marginTop","table","minWidth","tableWrapper","overflowX","status","new","approved","reject","RejectedProposals","_filterProposalsByStatus","proposals","state","targetProposals","forEach","p","client","push","getState","_handleStoreChange","bind","subscribe","setState","result","action","dispatch","_reqTodoList","rejected","emptyRows","min","length","handleChangePage","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","parseInt","target","value","handleClick","id","window","location","href","map","_id","name","firstName","lastName","organisation","outlineOfProject","Component"],"mappings":"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","sourcesContent":["/**\r\n * This component contains all reject proposals. It is entered via a \"View Rejected Proposals\" button on the Proposals page.\r\n * Author: Reyna Tan\r\n * Date: 07/05/2019\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, useTheme} from '@material-ui/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\r\nimport store from \"../../../../store\";\r\nimport {getProposalList} from \"../../../../api\";\r\nimport {getAllProposalsAction} from \"../../../../store/actionCreators\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        color: \"#232FFD\",\r\n        marginLeft: 100,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\"\r\n    }\r\n}));\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n\r\n    const {count, page, rowsPerPage, onChangePage} = props;\r\n\r\n    function handleFirstPageButtonClick(event) {\r\n        onChangePage(event, 0);\r\n    }\r\n\r\n    function handleBackButtonClick(event) {\r\n        onChangePage(event, page - 1);\r\n    }\r\n\r\n    function handleNextButtonClick(event) {\r\n        onChangePage(event, page + 1);\r\n    }\r\n\r\n    function handleLastPageButtonClick(event) {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"First Page\"\r\n            >\r\n                <FirstPageIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0}\r\n                        aria-label=\"Previous Page\">\r\n                <KeyboardArrowLeft/>\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"Next Page\"\r\n            >\r\n                <KeyboardArrowRight/>\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"Last Page\"\r\n            >\r\n                <LastPageIcon/>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 100,\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    },\r\n});\r\n\r\nconst status = {\r\n    new: \"new\",\r\n    approved: \"approved\",\r\n    reject: \"reject\"\r\n};\r\n\r\nclass RejectedProposals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = store.getState();\r\n\r\n        this._handleStoreChange = this._handleStoreChange.bind(this);\r\n        store.subscribe(this._handleStoreChange);\r\n    }\r\n\r\n    _handleStoreChange() {\r\n        this.setState(store.getState());\r\n    }\r\n\r\n    async _reqTodoList() {\r\n        const result = await getProposalList();\r\n        const action = getAllProposalsAction(result);\r\n        store.dispatch(action);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._reqTodoList();\r\n    }\r\n\r\n    _filterProposalsByStatus = status => {\r\n        //TODO: filter by user\r\n        const {proposals} = this.state;\r\n        let targetProposals = [];\r\n\r\n        proposals.forEach(p => {\r\n            // First check if valid before sending through\r\n            if ('client' in p) {\r\n                if ('organisation' in p.client) {\r\n                    if (p.status === status) {\r\n                        targetProposals.push(p);\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return targetProposals;\r\n    };\r\n\r\n\r\n    render() {\r\n        const classes = useStyles2();\r\n\r\n        const rejected = this._filterProposalsByStatus(status.reject);\r\n\r\n        const emptyRows = this.rowsPerPage - Math.min(this.rowsPerPage, rejected.length - this.page * this.rowsPerPage);\r\n\r\n        function handleChangePage(event, newPage) {\r\n            this.setPage(newPage);\r\n        }\r\n\r\n        function handleChangeRowsPerPage(event) {\r\n            this.setRowsPerPage(parseInt(event.target.value, 10));\r\n        }\r\n\r\n        function handleClick(event, id) {\r\n            window.location.href = `/dashboard/proposals/${id}`;\r\n        }\r\n\r\n        return (\r\n            <Paper className={useStyles2.root}>\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={useStyles2.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{width: \"20%\"}}>Project\r\n                                    Name</TableCell>\r\n                                <TableCell align=\"left\"\r\n                                           style={{width: \"15%\"}}>Client</TableCell>\r\n                                <TableCell align=\"left\"\r\n                                           style={{width: \"15%\"}}>Organisation</TableCell>\r\n                                <TableCell align=\"left\" style={{width: \"50%\"}}>Project\r\n                                    Description</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this._filterProposalsByStatus(status.reject).map(p => (\r\n                                <TableRow\r\n                                    hover\r\n                                    onClick={event => handleClick(event, p._id)}\r\n                                    key={p._id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {p.name}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        align=\"left\">{p.client.firstName + \" \" + p.client.lastName}</TableCell>\r\n                                    <TableCell\r\n                                        align=\"left\">{p.client.organisation.name}</TableCell>\r\n                                    <TableCell\r\n                                        align=\"left\">{p.outlineOfProject}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles2)(RejectedProposals);"]},"metadata":{},"sourceType":"module"}