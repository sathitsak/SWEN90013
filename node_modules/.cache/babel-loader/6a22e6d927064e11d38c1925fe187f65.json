{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Proposals\\\\AllProposals\\\\Proposals.js\";\nimport React from \"react\";\nimport ProposalCard from \"./ProposalCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport store from \"../../../../store\";\nimport { getAllSubjects, getProposalList } from \"../../../../api\";\nimport { getAllProposalsAction, getAllSubjectsAction } from \"../../../../store/actionCreators\";\n\nvar styles = function styles(theme) {\n  var _rejectedButton;\n\n  return {\n    paper: _defineProperty({\n      padding: 10,\n      margin: 10,\n      backgroundColor: grey[50]\n    }, theme.breakpoints.up(\"xl\"), {\n      width: 600\n    }),\n    link: {\n      textDecoration: \"none\",\n      textColor: \"white\"\n    },\n    swimTitle: {\n      textAlign: \"center\",\n      paddingLeft: \"3%\",\n      paddingBottom: \"3%\",\n      fontWeight: \"bold\",\n      color: \"#094183\"\n    },\n    rejectedButton: (_rejectedButton = {\n      position: \"absolute\",\n      color: \"#ffffff\",\n      backgroundColor: \"#094183\",\n      '&:hover': {\n        backgroundColor: \"#4074B2\",\n        color: \"#ffffff\"\n      }\n    }, _defineProperty(_rejectedButton, theme.breakpoints.up(\"xl\"), {\n      marginRight: 198\n    }), _defineProperty(_rejectedButton, theme.breakpoints.down(\"xl\"), {\n      right: 0\n    }), _defineProperty(_rejectedButton, \"bottom\", 0), _rejectedButton)\n  };\n};\n\nvar status = {\n  new: \"new\",\n  approved: \"approved\"\n};\n\nvar Proposals =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Proposals, _React$Component);\n\n  function Proposals(props) {\n    var _this;\n\n    _classCallCheck(this, Proposals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Proposals).call(this, props));\n\n    _this._filterProposalsByStatus = function (status) {\n      //TODO: filter by user\n      var proposals = _this.state.proposals;\n      var targetProposals = [];\n      proposals.forEach(function (p) {\n        // First check if valid before sending through\n        if ('client' in p) {\n          if ('organisation' in p.client) {\n            if (p.status === status) {\n              targetProposals.push(p);\n            }\n          }\n        }\n      });\n      return targetProposals;\n    };\n\n    _this.state = store.getState();\n    _this._handleStoreChange = _this._handleStoreChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    store.subscribe(_this._handleStoreChange);\n    return _this;\n  }\n\n  _createClass(Proposals, [{\n    key: \"_handleStoreChange\",\n    value: function _handleStoreChange() {\n      this.setState(store.getState());\n    }\n  }, {\n    key: \"_reqTodoList\",\n    value: function () {\n      var _reqTodoList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var proposals, getAllProposalsAct, subjects, getAllSubjectsAct;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getProposalList();\n\n              case 2:\n                proposals = _context.sent;\n                getAllProposalsAct = getAllProposalsAction(proposals);\n                store.dispatch(getAllProposalsAct);\n                _context.next = 7;\n                return getAllSubjects();\n\n              case 7:\n                subjects = _context.sent;\n                getAllSubjectsAct = getAllSubjectsAction(subjects);\n                store.dispatch(getAllSubjectsAct);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _reqTodoList() {\n        return _reqTodoList2.apply(this, arguments);\n      }\n\n      return _reqTodoList;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._reqTodoList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var subjects = this.state.subjects;\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        alignContent: \"center\",\n        justify: \"flex-end\",\n        direction: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.swimTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"New\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this._filterProposalsByStatus(status.new).map(function (p) {\n        return React.createElement(ProposalCard, {\n          key: p._id,\n          id: p._id,\n          proposal: p,\n          subjects: subjects,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n      }))))), React.createElement(Grid, {\n        item: true,\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.swimTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Approved\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this._filterProposalsByStatus(status.approved).map(function (p) {\n        return React.createElement(ProposalCard, {\n          key: p._id,\n          id: p._id,\n          proposal: p,\n          subjects: subjects,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n      })))))), React.createElement(Link, {\n        to: \"/dashboard/rejectedProposals\",\n        className: classes.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        className: classes.rejectedButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"View All Proposals\")));\n    }\n  }]);\n\n  return Proposals;\n}(React.Component);\n\nexport default withStyles(styles)(Proposals);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Proposals\\AllProposals\\Proposals.js"],"names":["React","ProposalCard","Grid","List","Typography","Paper","grey","withStyles","Button","Link","store","getAllSubjects","getProposalList","getAllProposalsAction","getAllSubjectsAction","styles","theme","paper","padding","margin","backgroundColor","breakpoints","up","width","link","textDecoration","textColor","swimTitle","textAlign","paddingLeft","paddingBottom","fontWeight","color","rejectedButton","position","marginRight","down","right","status","new","approved","Proposals","props","_filterProposalsByStatus","proposals","state","targetProposals","forEach","p","client","push","getState","_handleStoreChange","bind","subscribe","setState","getAllProposalsAct","dispatch","subjects","getAllSubjectsAct","_reqTodoList","classes","map","_id","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ProposalCard from \"./ProposalCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport store from \"../../../../store\";\r\nimport {getAllSubjects, getProposalList} from \"../../../../api\";\r\nimport {\r\n    getAllProposalsAction,\r\n    getAllSubjectsAction\r\n} from \"../../../../store/actionCreators\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: 10,\r\n        margin: 10,\r\n        backgroundColor: grey[50],\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: 600\r\n        },\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        textColor: \"white\"\r\n    },\r\n    swimTitle: {\r\n        textAlign: \"center\",\r\n        paddingLeft: \"3%\",\r\n        paddingBottom: \"3%\",\r\n        fontWeight: \"bold\",\r\n        color: \"#094183\"\r\n    },\r\n    rejectedButton: {\r\n        position: \"absolute\",\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#094183\",\r\n        '&:hover': {\r\n            backgroundColor: \"#4074B2\",\r\n            color: \"#ffffff\",\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            marginRight: 198\r\n        },\r\n        [theme.breakpoints.down(\"xl\")]: {\r\n            right: 0\r\n        },\r\n        bottom: 0\r\n    }\r\n});\r\n\r\nconst status = {\r\n    new: \"new\",\r\n    approved: \"approved\"\r\n};\r\n\r\nclass Proposals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = store.getState();\r\n\r\n        this._handleStoreChange = this._handleStoreChange.bind(this);\r\n        store.subscribe(this._handleStoreChange);\r\n    }\r\n\r\n    _handleStoreChange() {\r\n        this.setState(store.getState());\r\n    }\r\n\r\n    async _reqTodoList() {\r\n        const proposals = await getProposalList();\r\n        const getAllProposalsAct = getAllProposalsAction(proposals);\r\n        store.dispatch(getAllProposalsAct);\r\n\r\n        const subjects = await getAllSubjects();\r\n        const getAllSubjectsAct = getAllSubjectsAction(subjects);\r\n        store.dispatch(getAllSubjectsAct);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._reqTodoList();\r\n    }\r\n\r\n    _filterProposalsByStatus = status => {\r\n        //TODO: filter by user\r\n        const {proposals} = this.state;\r\n        let targetProposals = [];\r\n\r\n        proposals.forEach(p => {\r\n            // First check if valid before sending through\r\n            if ('client' in p) {\r\n                if ('organisation' in p.client) {\r\n                    if (p.status === status) {\r\n                        targetProposals.push(p);\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n        return targetProposals;\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {subjects} = this.state;\r\n\r\n        return (\r\n            <div style={{position: \"relative\"}}>\r\n                <Grid\r\n                    container\r\n                    spacing={16}\r\n                    alignContent=\"center\"\r\n                    justify=\"flex-end\"\r\n                    direction=\"row\"\r\n                >\r\n                    <Grid item sm>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography variant=\"h5\"\r\n                                        className={classes.swimTitle}>\r\n                                New\r\n                            </Typography>\r\n                            <div>\r\n                                <List dense={true}>\r\n                                    {this._filterProposalsByStatus(status.new).map(p => (\r\n                                        <ProposalCard\r\n                                            key={p._id}\r\n                                            id={p._id}\r\n                                            proposal={p}\r\n                                            subjects={subjects}\r\n                                        />\r\n                                    ))}\r\n                                </List>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography variant=\"h5\"\r\n                                        className={classes.swimTitle}>\r\n                                Approved\r\n                            </Typography>\r\n                            <div>\r\n                                <List dense={true}>\r\n                                    {this._filterProposalsByStatus(status.approved).map(p => (\r\n                                        <ProposalCard\r\n                                            key={p._id}\r\n                                            id={p._id}\r\n                                            proposal={p}\r\n                                            subjects={subjects}\r\n                                        />\r\n                                    ))}\r\n                                </List>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Link to={`/dashboard/rejectedProposals`}\r\n                      className={classes.link}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"medium\"\r\n                        className={classes.rejectedButton}\r\n                    >\r\n                        View All Proposals\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Proposals);\r\n"]},"metadata":{},"sourceType":"module"}