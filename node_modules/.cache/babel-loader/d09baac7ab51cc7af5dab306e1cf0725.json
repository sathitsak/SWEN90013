{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\IndividualProject\\\\ProjectInfo\\\\ChangeStatus.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { projectStatus } from \"../../Constants/Constants\";\nimport store from \"../../../../../store\";\nimport { updateProjectAction } from \"../../../../../store/actionCreators\";\nvar styles = {};\n\nvar ChangeStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChangeStatus, _React$Component);\n\n  function ChangeStatus(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeStatus).call(this, props));\n\n    _this._handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this._handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this._handleSelect = function (e) {\n      _this.setState({\n        selectedStatus: e.target.value\n      });\n    };\n\n    _this._handleOK = function () {\n      var selectedStatus = _this.state.selectedStatus;\n      var project = _this.props.project;\n      project.status = selectedStatus;\n      var updateProjAction = updateProjectAction(project._id, project);\n      store.dispatch(updateProjAction);\n\n      _this.setState({\n        open: false\n      });\n\n      alert(\"Status of project changed to \" + _this._showProjectStatus(selectedStatus) + \".\");\n    };\n\n    _this._showProjectStatus = function (status) {\n      switch (status) {\n        case projectStatus.new:\n          return \"NEW\";\n\n        case projectStatus.inProgress:\n          return \"IN PROGRESS\";\n\n        case projectStatus.completed:\n          return \"COMPLETED\";\n\n        default:\n          return \"INVALID STATUS OF PROJECT\";\n      }\n    };\n\n    _this.state = {\n      selectedStatus: \"new\",\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(ChangeStatus, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          project = _this$props.project;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          marginTop: 10,\n          marginRight: 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"left\",\n        color: \"textSecondary\",\n        variant: \"h6\",\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Status:\")), React.createElement(Grid, {\n        item: true,\n        style: {\n          marginTop: 10\n        },\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this._handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this._showProjectStatus(project.status)))), React.createElement(Dialog, {\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        open: open,\n        onClose: this._handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Update project status\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"sp-native-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Select, {\n        native: true,\n        onChange: function onChange(e) {\n          return _this2._handleSelect(e);\n        },\n        input: React.createElement(Input, {\n          id: \"sp-native-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: projectStatus.new,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"New\"), React.createElement(\"option\", {\n        value: projectStatus.inProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"In Progress\"), React.createElement(\"option\", {\n        value: projectStatus.completed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Completed\"))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this._handleOK,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return ChangeStatus;\n}(React.Component);\n\nChangeStatus.propTypes = {\n  classes: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ChangeStatus);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\IndividualProject\\ProjectInfo\\ChangeStatus.js"],"names":["React","PropTypes","withStyles","Typography","Button","Grid","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","Select","Input","InputLabel","projectStatus","store","updateProjectAction","styles","ChangeStatus","props","_handleClickOpen","setState","open","_handleClose","_handleSelect","e","selectedStatus","target","value","_handleOK","state","project","status","updateProjAction","_id","dispatch","alert","_showProjectStatus","new","inProgress","completed","classes","marginTop","marginRight","fontWeight","container","formControl","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {projectStatus} from \"../../Constants/Constants\";\r\nimport store from \"../../../../../store\";\r\nimport {updateProjectAction} from \"../../../../../store/actionCreators\";\r\n\r\nconst styles = {};\r\n\r\nclass ChangeStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedStatus: \"new\",\r\n            open: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {classes, project} = this.props;\r\n        const {open} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item style={{marginTop: 10, marginRight: 80}}>\r\n                        <Typography align=\"left\" color=\"textSecondary\"\r\n                                    variant=\"h6\" style={{fontWeight: \"bold\"}}>\r\n                            Status:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{marginTop: 10}} align=\"center\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={this._handleClickOpen}\r\n                        >\r\n                            {this._showProjectStatus(project.status)}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Dialog\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                    open={open}\r\n                    onClose={this._handleClose}\r\n                >\r\n                    <DialogTitle>Update project status</DialogTitle>\r\n                    <DialogContent>\r\n                        <form className={classes.container}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel\r\n                                    htmlFor=\"sp-native-simple\">Status</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    onChange={e => this._handleSelect(e)}\r\n                                    input={<Input id=\"sp-native-simple\"/>}\r\n                                >\r\n                                    <option value={projectStatus.new}>\r\n                                        New\r\n                                    </option>\r\n                                    <option value={projectStatus.inProgress}>\r\n                                        In Progress\r\n                                    </option>\r\n                                    <option value={projectStatus.completed}>\r\n                                        Completed\r\n                                    </option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this._handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this._handleOK} color=\"primary\">\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _handleClickOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    _handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    _handleSelect = e => {\r\n        this.setState({selectedStatus: e.target.value});\r\n    };\r\n\r\n    _handleOK = () => {\r\n        const {selectedStatus} = this.state;\r\n        const {project} = this.props;\r\n        project.status = selectedStatus;\r\n        const updateProjAction = updateProjectAction(project._id, project);\r\n        store.dispatch(updateProjAction);\r\n        this.setState({open: false});\r\n\r\n        alert(\"Status of project changed to \" + this._showProjectStatus(selectedStatus) + \".\");\r\n    };\r\n\r\n    _showProjectStatus = status => {\r\n        switch (status) {\r\n            case projectStatus.new:\r\n                return \"NEW\";\r\n            case projectStatus.inProgress:\r\n                return \"IN PROGRESS\";\r\n            case projectStatus.completed:\r\n                return \"COMPLETED\";\r\n            default:\r\n                return \"INVALID STATUS OF PROJECT\";\r\n        }\r\n    };\r\n\r\n}\r\n\r\nChangeStatus.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ChangeStatus);\r\n"]},"metadata":{},"sourceType":"module"}