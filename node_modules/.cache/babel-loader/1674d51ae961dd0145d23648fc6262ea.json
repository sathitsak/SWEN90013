{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Proposals\\\\IndividualProposal\\\\StatusChangeModal.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { green, red, grey } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport store from \"../../../../store\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { getAllSubjects } from \"../../../../api\";\nimport { getAllSubjectsAction, changeProposalStatusAction } from \"../../../../store/actionCreators\";\n\nvar styles = function styles(theme) {\n  return {\n    acceptButton: {\n      backgroundColor: green[400],\n      \"&:hover\": {\n        backgroundColor: green[800]\n      }\n    },\n    rejectButton: {\n      backgroundColor: red[400],\n      \"&:hover\": {\n        backgroundColor: red[800]\n      }\n    },\n    confirmButton: {\n      backgroundColor: \"#094183\",\n      color: \"#FFFFFF\",\n      \"&:hover\": {\n        backgroundColor: \"#4074B2\"\n      }\n    },\n    discardButton: {\n      color: \"#094183\"\n    },\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    }\n  };\n};\n\nvar StatusChangeModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatusChangeModal, _React$Component);\n\n  function StatusChangeModal(props) {\n    var _this;\n\n    _classCallCheck(this, StatusChangeModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatusChangeModal).call(this, props));\n\n    _this._handleChange = function (event) {\n      _this.setState(function () {\n        return {\n          subjectId: event.target.value\n        };\n      });\n    };\n\n    _this._handleClickOpen = function (status) {\n      if (status === 'accept') {\n        _this.setState({\n          openAccept: true,\n          option: status\n        });\n      } else if (status === 'reject') {\n        _this.setState({\n          openReject: true,\n          option: status\n        });\n      }\n    };\n\n    _this._handleClose = function (status) {\n      if (status === 'accept') {\n        _this.setState({\n          openAccept: false\n        });\n      } else if (status === 'reject') {\n        _this.setState({\n          openReject: false\n        });\n      }\n    };\n\n    _this._handleUpdate = function () {\n      var responseText = document.getElementById(\"reason\").value;\n      var _this$state = _this.state,\n          subjectId = _this$state.subjectId,\n          option = _this$state.option;\n      var id = _this.props.id;\n\n      if (option === \"accept\") {\n        if (responseText === \"\") {\n          alert(\"Please enter the reason to accept\");\n        } else if (subjectId === \"\") {\n          alert(\"Please select one subject for it\");\n        } else {\n          _this.setState({\n            openAccept: false\n          });\n\n          var object = {\n            subjectId: subjectId,\n            acceptReason: responseText\n          };\n          var changeProposalStatusAct = changeProposalStatusAction(id, option, object);\n          store.dispatch(changeProposalStatusAct);\n        }\n      } else if (option === \"reject\") {\n        if (responseText === \"\") {\n          alert(\"Please enter the reason to reject\");\n        } else {\n          _this.setState({\n            openReject: false\n          });\n\n          var _object = {\n            rejectReason: responseText\n          };\n\n          var _changeProposalStatusAct = changeProposalStatusAction(id, option, _object);\n\n          store.dispatch(_changeProposalStatusAct);\n        }\n      }\n    };\n\n    _this.state = {\n      openAccept: false,\n      openReject: false,\n      fullWidth: true,\n      maxWidth: \"md\",\n      option: \"\",\n      rerender: \"\",\n      subjectId: \"\",\n      status: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(StatusChangeModal, [{\n    key: \"_reqTodoList\",\n    value: function () {\n      var _reqTodoList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var subjectsResult, subjectsAction;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAllSubjects();\n\n              case 2:\n                subjectsResult = _context.sent;\n                subjectsAction = getAllSubjectsAction(subjectsResult);\n                store.dispatch(subjectsAction);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _reqTodoList() {\n        return _reqTodoList2.apply(this, arguments);\n      }\n\n      return _reqTodoList;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._reqTodoList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          paddingLeft: 22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.acceptButton,\n        onClick: function onClick() {\n          return _this2._handleClickOpen(\"accept\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Accept\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.rejectButton,\n        align: \"center\",\n        onClick: function onClick() {\n          return _this2._handleClickOpen(\"reject\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Reject\"), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.openAccept,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Accept Proposal\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          padding: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        style: {\n          color: grey[800]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Please state your reasoning:\"), React.createElement(TextField, {\n        id: \"reason\",\n        multiline: true,\n        rows: \"4\",\n        margin: \"dense\",\n        variant: \"filled\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        style: {\n          width: \"70%\",\n          marginTop: 9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        style: {\n          color: grey[800]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"If applicable, please assign this proposal to a subject\"), React.createElement(Select, {\n        value: this.state.subjectId,\n        id: \"subjectName\",\n        onChange: function onChange(e) {\n          return _this2._handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.subjects ? this.state.subjects.map(function (s) {\n        return React.createElement(MenuItem, {\n          value: s._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, s.name);\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleUpdate,\n        color: \"primary\",\n        className: classes.confirmButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Confirm Changes\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2._handleClose(\"accept\");\n        },\n        color: \"primary\",\n        className: classes.discardButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Dialog, {\n        fullWidth: this.state.fullWidth,\n        maxWidth: this.state.maxWidth,\n        open: this.state.openReject,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Reject Proposal\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          padding: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        style: {\n          color: grey[800]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Please state your reasoning:\"), React.createElement(TextField, {\n        id: \"reason\",\n        multiline: true,\n        rows: \"4\",\n        margin: \"dense\",\n        variant: \"filled\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this._handleUpdate,\n        color: \"primary\",\n        className: classes.confirmButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Confirm Changes\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2._handleClose(\"reject\");\n        },\n        color: \"primary\",\n        className: classes.discardButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return StatusChangeModal;\n}(React.Component);\n\nexport default withStyles(styles)(StatusChangeModal);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Proposals\\IndividualProposal\\StatusChangeModal.js"],"names":["React","Grid","Button","green","red","grey","Dialog","DialogActions","DialogTitle","TextField","MenuItem","FormControl","Select","store","withStyles","getAllSubjects","getAllSubjectsAction","changeProposalStatusAction","styles","theme","acceptButton","backgroundColor","rejectButton","confirmButton","color","discardButton","container","display","flexWrap","StatusChangeModal","props","_handleChange","event","setState","subjectId","target","value","_handleClickOpen","status","openAccept","option","openReject","_handleClose","_handleUpdate","responseText","document","getElementById","state","id","alert","object","acceptReason","changeProposalStatusAct","dispatch","rejectReason","fullWidth","maxWidth","rerender","subjectsResult","subjectsAction","_reqTodoList","classes","paddingLeft","padding","width","marginTop","e","subjects","map","s","_id","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {green, red, grey} from \"@material-ui/core/colors\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport store from \"../../../../store\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {getAllSubjects} from \"../../../../api\";\r\nimport {\r\n    getAllSubjectsAction,\r\n    changeProposalStatusAction\r\n} from \"../../../../store/actionCreators\";\r\n\r\nconst styles = theme => ({\r\n    acceptButton: {\r\n        backgroundColor: green[400],\r\n        \"&:hover\": {\r\n            backgroundColor: green[800]\r\n        }\r\n    },\r\n    rejectButton: {\r\n        backgroundColor: red[400],\r\n        \"&:hover\": {\r\n            backgroundColor: red[800]\r\n        }\r\n    },\r\n    confirmButton: {\r\n        backgroundColor: \"#094183\",\r\n        color: \"#FFFFFF\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#4074B2\"\r\n        }\r\n    },\r\n    discardButton: {\r\n        color: \"#094183\"\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n});\r\n\r\nclass StatusChangeModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openAccept: false,\r\n            openReject: false,\r\n            fullWidth: true,\r\n            maxWidth: \"md\",\r\n            option: \"\",\r\n            rerender: \"\",\r\n            subjectId: \"\",\r\n            status: \"\"\r\n        };\r\n    }\r\n\r\n    async _reqTodoList() {\r\n        const subjectsResult = await getAllSubjects();\r\n        const subjectsAction = getAllSubjectsAction(subjectsResult);\r\n        store.dispatch(subjectsAction);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._reqTodoList();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Grid container spacing={24}>\r\n                    <Grid item xs={6} style={{paddingLeft: 22}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.acceptButton}\r\n                            onClick={() => this._handleClickOpen(\"accept\")}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6} align=\"left\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.rejectButton}\r\n                            align=\"center\"\r\n                            onClick={() => this._handleClickOpen(\"reject\")}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n\r\n                        <Dialog\r\n                            fullWidth={this.state.fullWidth}\r\n                            maxWidth={this.state.maxWidth}\r\n                            open={this.state.openAccept}\r\n                            aria-labelledby=\"max-width-dialog-title\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">\r\n                                Accept Proposal\r\n                            </DialogTitle>\r\n                            <Grid container spacing={24}>\r\n                                <Grid item xs={6} style={{padding: 50}}>\r\n                                    <h6 style={{color: grey[800]}}>\r\n                                        Please state your reasoning:\r\n                                    </h6>\r\n                                    <TextField\r\n                                        id=\"reason\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"filled\"\r\n                                        style={{width: \"100%\"}}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{marginTop: 30}}>\r\n                                    <form className={classes.container}>\r\n                                        <FormControl style={{\r\n                                            width: \"70%\",\r\n                                            marginTop: 9\r\n                                        }}>\r\n                                            <h6 style={{color: grey[800]}}>\r\n                                                If applicable, please assign\r\n                                                this proposal to a subject\r\n                                            </h6>\r\n                                            <Select\r\n                                                value={this.state.subjectId}\r\n                                                id=\"subjectName\"\r\n                                                onChange={e => this._handleChange(e)}\r\n                                            >\r\n                                                {this.state.subjects ? (\r\n                                                    this.state.subjects.map(s => (\r\n                                                        <MenuItem\r\n                                                            value={s._id}>{s.name}</MenuItem>\r\n                                                    ))\r\n                                                ) : (\r\n                                                    <div/>\r\n                                                )}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </form>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <DialogActions>\r\n                                <Button\r\n                                    onClick={this._handleUpdate}\r\n                                    color=\"primary\"\r\n                                    className={classes.confirmButton}\r\n                                >\r\n                                    Confirm Changes\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    onClick={() => this._handleClose(\"accept\")}\r\n                                    color=\"primary\"\r\n                                    className={classes.discardButton}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n\r\n                        <Dialog\r\n                            fullWidth={this.state.fullWidth}\r\n                            maxWidth={this.state.maxWidth}\r\n                            open={this.state.openReject}\r\n                            aria-labelledby=\"max-width-dialog-title\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">\r\n                                Reject Proposal\r\n                            </DialogTitle>\r\n                            <Grid container spacing={24}>\r\n                                <Grid item xs={12} style={{padding: 50}}>\r\n                                    <h6 style={{color: grey[800]}}>\r\n                                        Please state your reasoning:\r\n                                    </h6>\r\n                                    <TextField\r\n                                        id=\"reason\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"filled\"\r\n                                        style={{width: \"100%\"}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <DialogActions>\r\n                                <Button\r\n                                    onClick={this._handleUpdate}\r\n                                    color=\"primary\"\r\n                                    className={classes.confirmButton}\r\n                                >\r\n                                    Confirm Changes\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    onClick={() => this._handleClose(\"reject\")}\r\n                                    color=\"primary\"\r\n                                    className={classes.discardButton}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _handleChange = event => {\r\n        this.setState(() => {\r\n            return {\r\n                subjectId: event.target.value\r\n            };\r\n        });\r\n    };\r\n\r\n    _handleClickOpen = (status) => {\r\n        if (status === 'accept') {\r\n            this.setState({openAccept: true, option: status});\r\n        } else if (status === 'reject') {\r\n            this.setState({openReject: true, option: status});\r\n        }\r\n    };\r\n\r\n    _handleClose = (status) => {\r\n        if (status === 'accept') {\r\n            this.setState({openAccept: false});\r\n        } else if (status === 'reject') {\r\n            this.setState({openReject: false});\r\n        }\r\n    };\r\n\r\n    _handleUpdate = () => {\r\n        let responseText = document.getElementById(\"reason\").value;\r\n        const {subjectId, option} = this.state;\r\n        const {id} = this.props;\r\n        if (option === \"accept\") {\r\n            if (responseText === \"\") {\r\n                alert(\"Please enter the reason to accept\")\r\n            } else if (subjectId === \"\") {\r\n                alert(\"Please select one subject for it\")\r\n            } else {\r\n                this.setState({openAccept: false});\r\n                const object = {\r\n                    subjectId: subjectId,\r\n                    acceptReason: responseText\r\n                };\r\n                const changeProposalStatusAct = changeProposalStatusAction(id, option, object);\r\n                store.dispatch(changeProposalStatusAct);\r\n            }\r\n        } else if (option === \"reject\") {\r\n            if (responseText === \"\") {\r\n                alert(\"Please enter the reason to reject\")\r\n            } else {\r\n                this.setState({openReject: false});\r\n                const object = {\r\n                    rejectReason: responseText\r\n                };\r\n                const changeProposalStatusAct = changeProposalStatusAction(id, option, object);\r\n                store.dispatch(changeProposalStatusAct);\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default withStyles(styles)(StatusChangeModal);\r\n"]},"metadata":{},"sourceType":"module"}