{"ast":null,"code":"import { GET_ALL_PROJECTS, GET_PROJECT_BY_ID, GET_SUPERVISORS, GET_ALL_PROPOSALS, GET_PROPOSAL_BY_ID, GET_CLIENT_BY_ID, GET_ALL_SUBJECTS, UPDATE_PROJECT, UPDATE_PRODUCT, CREATE_NEW_PRODUCT } from \"./actionTypes\";\nimport { updateProject, updateProduct, postNewProduct } from \"../api\";\nvar defaultState = {\n  projects: [],\n  project: {},\n  supervisors: [],\n  proposals: [],\n  proposal: {},\n  page_title: \"\",\n  client: {},\n  subjects: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_ALL_PROJECTS) {\n    return getAllProjects(state, action);\n  }\n\n  if (action.type === GET_PROJECT_BY_ID) {\n    return getProjectById(state, action);\n  }\n\n  if (action.type === GET_SUPERVISORS) {\n    return getSupervisors(state, action);\n  }\n\n  if (action.type === GET_ALL_PROPOSALS) {\n    return getAllProposals(state, action);\n  }\n\n  if (action.type === GET_PROPOSAL_BY_ID) {\n    return getProposalById(state, action);\n  }\n\n  if (action.type === GET_CLIENT_BY_ID) {\n    return getClientById(state, action);\n  }\n\n  if (action.type === GET_ALL_SUBJECTS) {\n    return getAllSubjects(state, action);\n  }\n\n  if (action.type === UPDATE_PROJECT) {\n    return updateProjectById(state, action);\n  }\n\n  if (action.type === UPDATE_PRODUCT) {\n    return updateProductById(state, action);\n  }\n\n  if (action.type === CREATE_NEW_PRODUCT) {\n    return createProduct(state, action);\n  }\n\n  return state;\n});\n\nfunction getAllSubjects(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.subjects = action.subjects;\n  return newState;\n}\n\nfunction getProposalById(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.proposal = action.proposal;\n  newState.page_title = action.page_title;\n  return newState;\n}\n\nfunction getAllProposals(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.proposals = action.proposals;\n  newState.page_title = action.page_title;\n  return newState;\n}\n\nfunction getAllProjects(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.projects = action.projects;\n  newState.page_title = action.page_title;\n  return newState;\n}\n\nfunction getProjectById(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.project = action.project;\n  newState.page_title = action.page_title;\n  var supervisorID = newState.project.supervisorID;\n  var currentSupervisor = \"\";\n  newState.supervisors.forEach(function (supervisor) {\n    if (supervisor.id === supervisorID) {\n      currentSupervisor = supervisor.firstName + \" \" + supervisor.lastName;\n      newState.currentSupervisor = currentSupervisor;\n    }\n  });\n  return newState;\n}\n\nfunction getSupervisors(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.supervisors = action.supervisors;\n  return newState;\n}\n\nfunction getClientById(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.client = action.client;\n  return newState;\n}\n\nfunction updateProjectById(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  newState.project = action.project;\n  updateProject(action.id, action.project);\n  return newState;\n}\n\nfunction updateProductById(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  updateProduct(action.id, action.product);\n  return newState;\n}\n\nfunction createProduct(state, action) {\n  var newState = JSON.parse(JSON.stringify(state));\n  postNewProduct(action.product);\n  return newState;\n}","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\store\\reducer.js"],"names":["GET_ALL_PROJECTS","GET_PROJECT_BY_ID","GET_SUPERVISORS","GET_ALL_PROPOSALS","GET_PROPOSAL_BY_ID","GET_CLIENT_BY_ID","GET_ALL_SUBJECTS","UPDATE_PROJECT","UPDATE_PRODUCT","CREATE_NEW_PRODUCT","updateProject","updateProduct","postNewProduct","defaultState","projects","project","supervisors","proposals","proposal","page_title","client","subjects","state","action","type","getAllProjects","getProjectById","getSupervisors","getAllProposals","getProposalById","getClientById","getAllSubjects","updateProjectById","updateProductById","createProduct","newState","JSON","parse","stringify","supervisorID","currentSupervisor","forEach","supervisor","id","firstName","lastName","product"],"mappings":"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","sourcesContent":["import {\r\n    GET_ALL_PROJECTS,\r\n    GET_PROJECT_BY_ID,\r\n    GET_SUPERVISORS,\r\n    GET_ALL_PROPOSALS,\r\n    GET_PROPOSAL_BY_ID,\r\n    GET_CLIENT_BY_ID,\r\n    GET_ALL_SUBJECTS,\r\n    UPDATE_PROJECT,\r\n    UPDATE_PRODUCT,\r\n    CREATE_NEW_PRODUCT\r\n} from \"./actionTypes\";\r\nimport {\r\n    updateProject,\r\n    updateProduct,\r\n    postNewProduct\r\n} from \"../api\";\r\n\r\nconst defaultState = {\r\n    projects: [],\r\n    project: {},\r\n    supervisors: [],\r\n    proposals: [],\r\n    proposal: {},\r\n    page_title: \"\",\r\n    client: {},\r\n    subjects: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    if (action.type === GET_ALL_PROJECTS) {\r\n        return getAllProjects(state, action);\r\n    }\r\n\r\n    if (action.type === GET_PROJECT_BY_ID) {\r\n        return getProjectById(state, action);\r\n    }\r\n\r\n    if (action.type === GET_SUPERVISORS) {\r\n        return getSupervisors(state, action);\r\n    }\r\n\r\n    if (action.type === GET_ALL_PROPOSALS) {\r\n        return getAllProposals(state, action);\r\n    }\r\n\r\n    if (action.type === GET_PROPOSAL_BY_ID) {\r\n        return getProposalById(state, action);\r\n    }\r\n\r\n    if (action.type === GET_CLIENT_BY_ID) {\r\n        return getClientById(state, action);\r\n    }\r\n\r\n    if (action.type === GET_ALL_SUBJECTS) {\r\n        return getAllSubjects(state, action);\r\n    }\r\n\r\n    if (action.type === UPDATE_PROJECT) {\r\n        return updateProjectById(state, action);\r\n    }\r\n\r\n    if (action.type === UPDATE_PRODUCT) {\r\n        return updateProductById(state, action);\r\n    }\r\n\r\n    if (action.type === CREATE_NEW_PRODUCT) {\r\n        return createProduct(state, action);\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nfunction getAllSubjects(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.subjects = action.subjects;\r\n    return newState;\r\n}\r\n\r\nfunction getProposalById(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.proposal = action.proposal;\r\n    newState.page_title = action.page_title;\r\n    return newState;\r\n}\r\n\r\nfunction getAllProposals(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.proposals = action.proposals;\r\n    newState.page_title = action.page_title;\r\n    return newState;\r\n}\r\n\r\nfunction getAllProjects(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.projects = action.projects;\r\n    newState.page_title = action.page_title;\r\n    return newState;\r\n}\r\n\r\nfunction getProjectById(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.project = action.project;\r\n    newState.page_title = action.page_title;\r\n    const supervisorID = newState.project.supervisorID;\r\n\r\n    let currentSupervisor = \"\";\r\n    newState.supervisors.forEach(supervisor => {\r\n        if (supervisor.id === supervisorID) {\r\n            currentSupervisor = supervisor.firstName + \" \" + supervisor.lastName;\r\n            newState.currentSupervisor = currentSupervisor;\r\n        }\r\n    });\r\n    return newState;\r\n}\r\n\r\nfunction getSupervisors(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.supervisors = action.supervisors;\r\n    return newState;\r\n}\r\n\r\nfunction getClientById(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.client = action.client;\r\n    return newState;\r\n}\r\n\r\nfunction updateProjectById(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState.project = action.project;\r\n    updateProject(action.id, action.project);\r\n    return newState;\r\n}\r\n\r\nfunction updateProductById(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    updateProduct(action.id, action.product);\r\n    return newState;\r\n}\r\n\r\nfunction createProduct(state, action) {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    postNewProduct(action.product);\r\n    return newState;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}