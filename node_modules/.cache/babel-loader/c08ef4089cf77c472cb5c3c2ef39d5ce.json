{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Projects\\\\AllProjects\\\\AllProjects.js\";\n\n/**\r\n * This component contains all proposals. It is entered via a \"View All Proposals\" button on the Proposals page.\r\n * Author: Reyna Tan\r\n * Date: 07/05/2019\r\n */\nimport React from 'react';\nimport store from \"../../../../store\";\nimport { getAllSubjects, getProjectList, getSupervisors } from \"../../../../api\";\nimport { getAllProjectAction, getSupervisorsAction, getAllSubjectsAction } from \"../../../../store/actionCreators\";\nimport MaterialTable from 'material-table';\n\nvar AllProjects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AllProjects, _React$Component);\n\n  function AllProjects(props) {\n    var _this;\n\n    _classCallCheck(this, AllProjects);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllProjects).call(this, props));\n    _this.state = store.getState();\n    _this._handleStoreChange = _this._handleStoreChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    store.subscribe(_this._handleStoreChange);\n    return _this;\n  }\n\n  _createClass(AllProjects, [{\n    key: \"_handleStoreChange\",\n    value: function _handleStoreChange() {\n      this.setState(store.getState());\n    }\n  }, {\n    key: \"_reqTodoList\",\n    value: function () {\n      var _reqTodoList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var projects, getAllProjectAct, supervisors, getSupervisorsAct, subjects, getAllSubjectsAct;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getProjectList();\n\n              case 2:\n                projects = _context.sent;\n                getAllProjectAct = getAllProjectAction(projects);\n                store.dispatch(getAllProjectAct);\n                _context.next = 7;\n                return getSupervisors();\n\n              case 7:\n                supervisors = _context.sent;\n                getSupervisorsAct = getSupervisorsAction(supervisors);\n                store.dispatch(getSupervisorsAct);\n                _context.next = 12;\n                return getAllSubjects();\n\n              case 12:\n                subjects = _context.sent;\n                getAllSubjectsAct = getAllSubjectsAction(subjects);\n                store.dispatch(getAllSubjectsAct);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _reqTodoList() {\n        return _reqTodoList2.apply(this, arguments);\n      }\n\n      return _reqTodoList;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._reqTodoList();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(nextProps.currentPage);\n    }\n  }, {\n    key: \"_capitalize\",\n    value: function _capitalize(str) {\n      if (str === \"new\") {\n        return \"New\";\n      } else if (str === \"approved\") {\n        return \"Approved\";\n      } else {\n        return \"Rejected\";\n      }\n    }\n  }, {\n    key: \"_extractYear\",\n    value: function _extractYear(str) {\n      // Format in which the date is stored in the DB: 2019-10-07T03:34:16.921Z\n      // Slice the string using \"-\" and extract only the first element\n      return str.split(\"-\")[0];\n    }\n  }, {\n    key: \"_formatDataIntoTableList\",\n    value: function _formatDataIntoTableList() {\n      var _this2 = this;\n\n      var projects = this.state.projects;\n      var projectList = [];\n      proposals.forEach(function (p) {\n        var nextProposal = {\n          year: _this2._extractYear(p.date),\n          name: p.name,\n          client: p.client.firstName + \" \" + p.client.lastName,\n          outlineOfProject: p.outlineOfProject,\n          status: _this2._capitalize(p.status),\n          subjectId: p.subjectId\n        };\n        proposalList.push(nextProposal);\n      });\n      return proposalList;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MaterialTable, {\n        title: \"All Proposals\",\n        columns: [{\n          title: 'Year',\n          field: 'year',\n          filterCellStyle: {\n            maxWidth: 50\n          }\n        }, {\n          title: 'Proposal Name',\n          field: 'name'\n        }, {\n          title: 'Client',\n          field: 'client'\n        }, {\n          title: 'Description',\n          field: 'outlineOfProject',\n          filtering: false\n        }, {\n          title: 'Status',\n          field: 'status',\n          lookup: {\n            New: 'New',\n            Approved: 'Approved',\n            Rejected: 'Rejected'\n          },\n          filterCellStyle: {\n            marginTop: 0\n          }\n        }, {\n          title: 'Subject',\n          field: 'subjectId',\n          filterCellStyle: {\n            maxWidth: 50\n          }\n        }],\n        data: this._formatDataIntoTableList(),\n        options: {\n          filtering: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AllProjects;\n}(React.Component);\n\nexport default AllProjects;","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Projects\\AllProjects\\AllProjects.js"],"names":["React","store","getAllSubjects","getProjectList","getSupervisors","getAllProjectAction","getSupervisorsAction","getAllSubjectsAction","MaterialTable","AllProjects","props","state","getState","_handleStoreChange","bind","subscribe","setState","projects","getAllProjectAct","dispatch","supervisors","getSupervisorsAct","subjects","getAllSubjectsAct","_reqTodoList","nextProps","console","log","currentPage","str","split","projectList","proposals","forEach","p","nextProposal","year","_extractYear","date","name","client","firstName","lastName","outlineOfProject","status","_capitalize","subjectId","proposalList","push","title","field","filterCellStyle","maxWidth","filtering","lookup","New","Approved","Rejected","marginTop","_formatDataIntoTableList","Component"],"mappings":"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","sourcesContent":["/**\r\n * This component contains all proposals. It is entered via a \"View All Proposals\" button on the Proposals page.\r\n * Author: Reyna Tan\r\n * Date: 07/05/2019\r\n */\r\n\r\nimport React from 'react';\r\nimport store from \"../../../../store\";\r\nimport {getAllSubjects, getProjectList, getSupervisors} from \"../../../../api\";\r\nimport {\r\n    getAllProjectAction,\r\n    getSupervisorsAction,\r\n    getAllSubjectsAction\r\n} from \"../../../../store/actionCreators\";\r\nimport MaterialTable from 'material-table';\r\n\r\nclass AllProjects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = store.getState();\r\n\r\n        this._handleStoreChange = this._handleStoreChange.bind(this);\r\n        store.subscribe(this._handleStoreChange);\r\n    }\r\n\r\n    _handleStoreChange() {\r\n        this.setState(store.getState());\r\n    }\r\n\r\n    async _reqTodoList() {\r\n        const projects = await getProjectList();\r\n        const getAllProjectAct = getAllProjectAction(projects);\r\n        store.dispatch(getAllProjectAct);\r\n\r\n        const supervisors = await getSupervisors();\r\n        const getSupervisorsAct = getSupervisorsAction(supervisors);\r\n        store.dispatch(getSupervisorsAct);\r\n\r\n        const subjects = await getAllSubjects();\r\n        const getAllSubjectsAct = getAllSubjectsAction(subjects);\r\n        store.dispatch(getAllSubjectsAct);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._reqTodoList();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.currentPage);\r\n    }\r\n\r\n    _capitalize(str) {\r\n        if (str === \"new\") {\r\n            return \"New\";\r\n        } else if (str === \"approved\") {\r\n            return \"Approved\";\r\n        } else {\r\n            return \"Rejected\";\r\n        }\r\n    };\r\n\r\n    _extractYear(str) {\r\n        // Format in which the date is stored in the DB: 2019-10-07T03:34:16.921Z\r\n        // Slice the string using \"-\" and extract only the first element\r\n        return str.split(\"-\")[0];\r\n    }\r\n\r\n    _formatDataIntoTableList() {\r\n        const {projects} = this.state;\r\n\r\n        let projectList = [];\r\n\r\n        proposals.forEach(p => {\r\n            let nextProposal = {\r\n                year: this._extractYear(p.date),\r\n                name: p.name,\r\n                client: p.client.firstName + \" \" + p.client.lastName,\r\n                outlineOfProject: p.outlineOfProject,\r\n                status: this._capitalize(p.status),\r\n                subjectId: p.subjectId\r\n            }\r\n\r\n            proposalList.push(nextProposal);\r\n        })\r\n\r\n        return proposalList;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <MaterialTable\r\n                title=\"All Proposals\"\r\n                columns={[\r\n                    { title: 'Year', field: 'year', filterCellStyle:{maxWidth:50} },\r\n                    { title: 'Proposal Name', field: 'name' },\r\n                    { title: 'Client', field: 'client' },\r\n                    { title: 'Description', field: 'outlineOfProject', filtering: false },\r\n                    { title: 'Status', field: 'status', lookup: { New: 'New', Approved: 'Approved', Rejected: 'Rejected'}, filterCellStyle:{marginTop:0} },\r\n                    { title: 'Subject', field: 'subjectId', filterCellStyle:{maxWidth:50} },\r\n                ]}\r\n                data={this._formatDataIntoTableList()}\r\n                options={{\r\n                    filtering: true,\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default (AllProjects);"]},"metadata":{},"sourceType":"module"}