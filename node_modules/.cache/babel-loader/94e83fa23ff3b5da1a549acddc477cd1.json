{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Proposals\\\\AllProposals\\\\ProposalCard.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport red from \"@material-ui/core/colors/red\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport PropTypes from \"prop-types\";\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      width: \"96%\",\n      margin: 10,\n      overflow: \"auto\"\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    link: {\n      float: \"left\",\n      width: \"100%\",\n      textDecoration: \"none\",\n      \"&:hover\": {\n        backgroundColor: grey[200],\n        textDecoration: \"none\"\n      },\n      \"&:active\": {\n        backgroundColor: grey[300]\n      }\n    },\n    cardHeader: {\n      paddingBottom: 0\n    },\n    cardContent: {\n      paddingTop: 12,\n      paddingBottom: 0\n    }\n  };\n};\n\nvar ProposalCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProposalCard, _React$Component);\n\n  function ProposalCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProposalCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProposalCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._showSubject = function (subjectId) {\n      var subjects = _this.props.subjects;\n      var subjectName = \"NO RELATED SUBJECT\";\n      subjects.forEach(function (sb) {\n        if (sb._id === subjectId) subjectName = sb.name;\n      });\n      return subjectName;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProposalCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          id = _this$props.id,\n          proposal = _this$props.proposal;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dashboard/proposals/\".concat(id),\n        id: id,\n        className: classes.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        avatar: React.createElement(Avatar, {\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, proposal.name.slice(0, 1).toUpperCase()),\n        title: proposal.name,\n        subheader: proposal.client.organisation.name,\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        className: classes.cardContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"overline\",\n        align: \"left\",\n        style: {\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Client: \", proposal.client.firstName + \" \" + proposal.client.lastName), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"p\",\n        variant: \"overline\",\n        style: {\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Subject: \", this._showSubject(proposal.subjectId)))));\n    }\n  }]);\n\n  return ProposalCard;\n}(React.Component);\n\nProposalCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  id: PropTypes.string.isRequired,\n  proposal: PropTypes.object.isRequired,\n  subjects: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(ProposalCard);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Proposals\\AllProposals\\ProposalCard.js"],"names":["React","withStyles","Avatar","Card","CardContent","CardHeader","Divider","red","Typography","Link","grey","PropTypes","styles","theme","card","width","margin","overflow","avatar","backgroundColor","link","float","textDecoration","cardHeader","paddingBottom","cardContent","paddingTop","ProposalCard","_showSubject","subjectId","subjects","props","subjectName","forEach","sb","_id","name","classes","id","proposal","slice","toUpperCase","client","organisation","marginBottom","firstName","lastName","marginTop","Component","propTypes","object","isRequired","string","array"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport grey from \"@material-ui/core/colors/grey\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        width: \"96%\",\r\n        margin: 10,\r\n        overflow: \"auto\",\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500]\r\n    },\r\n    link: {\r\n        float: \"left\",\r\n        width: \"100%\",\r\n        textDecoration: \"none\",\r\n        \"&:hover\": {\r\n            backgroundColor: grey[200],\r\n            textDecoration: \"none\",\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: grey[300]\r\n        }\r\n    },\r\n    cardHeader: {\r\n        paddingBottom: 0\r\n    },\r\n    cardContent: {\r\n        paddingTop: 12,\r\n        paddingBottom: 0,\r\n    }\r\n});\r\n\r\nclass ProposalCard extends React.Component {\r\n\r\n    render() {\r\n        const {classes, id, proposal} = this.props;\r\n        return (\r\n            <Card className={classes.card}>\r\n                <Link\r\n                    to={`/dashboard/proposals/${id}`}\r\n                    id={id}\r\n                    className={classes.link}\r\n                >\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar className={classes.avatar}>\r\n                                {proposal.name.slice(0, 1).toUpperCase()}\r\n                            </Avatar>\r\n                        }\r\n                        title={proposal.name}\r\n                        subheader={proposal.client.organisation.name}\r\n                        className={classes.cardHeader}\r\n                    />\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography variant=\"overline\" align=\"left\"\r\n                                    style={{marginBottom: 5}}>\r\n                            Client: {proposal.client.firstName + \" \" + proposal.client.lastName}\r\n                        </Typography>\r\n\r\n                        <Divider/>\r\n\r\n                        <Typography component=\"p\" variant=\"overline\"\r\n                                    style={{marginTop: 5}}>\r\n                            Subject: {this._showSubject(proposal.subjectId)}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    _showSubject = (subjectId) => {\r\n        const {subjects} = this.props;\r\n        let subjectName = \"NO RELATED SUBJECT\";\r\n        subjects.forEach(sb => {\r\n            if (sb._id === subjectId)\r\n                subjectName = sb.name;\r\n        });\r\n        return subjectName;\r\n    };\r\n}\r\n\r\nProposalCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    proposal: PropTypes.object.isRequired,\r\n    subjects: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProposalCard);\r\n\r\n"]},"metadata":{},"sourceType":"module"}