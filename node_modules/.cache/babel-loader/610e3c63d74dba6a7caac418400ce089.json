{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Client\\\\AllClients.js\";\n\n/**\r\n * This component contains all clients. It is entered via the \"View Clients\" link on the app drawer.\r\n * Author: Reyna Tan\r\n * Date: 09/10/2019\r\n */\nimport React, { PureComponent } from 'react';\nimport store from \"../../../../store\";\nimport { getAllClients } from \"../../../../api\";\nimport { getAllClientsAction } from \"../../../../store/actionCreators\";\nimport MaterialTable from 'material-table';\n\nvar AllClients =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(AllClients, _PureComponent);\n\n  function AllClients(props) {\n    var _this;\n\n    _classCallCheck(this, AllClients);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllClients).call(this, props));\n\n    _this._showSupervisorName = function (supervisorId) {\n      var supervisors = _this.state.supervisors;\n      var supervisorName = \" \";\n      supervisors.forEach(function (sp) {\n        if (sp._id === supervisorId) {\n          supervisorName = sp.firstName + \" \" + sp.lastName;\n        }\n      });\n      return supervisorName;\n    };\n\n    _this.state = store.getState();\n    _this._handleStoreChange = _this._handleStoreChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    store.subscribe(_this._handleStoreChange);\n    return _this;\n  }\n\n  _createClass(AllClients, [{\n    key: \"_handleStoreChange\",\n    value: function _handleStoreChange() {\n      this.setState(store.getState());\n    }\n  }, {\n    key: \"_reqTodoList\",\n    value: function () {\n      var _reqTodoList2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var projects, getAllProjectAct, supervisors, getSupervisorsAct, subjects, getAllSubjectsAct;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getProjectList();\n\n              case 2:\n                projects = _context.sent;\n                getAllProjectAct = getAllProjectAction(projects);\n                store.dispatch(getAllProjectAct);\n                _context.next = 7;\n                return getSupervisors();\n\n              case 7:\n                supervisors = _context.sent;\n                getSupervisorsAct = getSupervisorsAction(supervisors);\n                store.dispatch(getSupervisorsAct);\n                _context.next = 12;\n                return getAllSubjects();\n\n              case 12:\n                subjects = _context.sent;\n                getAllSubjectsAct = getAllSubjectsAction(subjects);\n                store.dispatch(getAllSubjectsAct);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _reqTodoList() {\n        return _reqTodoList2.apply(this, arguments);\n      }\n\n      return _reqTodoList;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._reqTodoList();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(nextProps.currentPage);\n    }\n  }, {\n    key: \"_extractYear\",\n    value: function _extractYear(str) {\n      // Format in which the date is stored in the DB: 2019-10-07T03:34:16.921Z\n      // Slice the string using \"-\" and extract only the first element\n      return str.split(\"-\")[0];\n    }\n  }, {\n    key: \"_formatDataIntoTableList\",\n    value: function _formatDataIntoTableList() {\n      var _this2 = this;\n\n      var projects = this.state.projects;\n      var projectList = [];\n      projects.forEach(function (p) {\n        // First check if valid\n        if ('proposal' in p) {\n          if ('client' in p.proposal) {\n            if ('organisation' in p.proposal.client) {\n              var nextProject = {\n                year: _this2._extractYear(p.date),\n                name: p.name,\n                client: p.proposal.client.firstName + \" \" + p.proposal.client.lastName,\n                outlineOfProject: p.proposal.outlineOfProject,\n                status: p.status,\n                subjectId: p.subjectId,\n                supervisor: _this2._showSupervisorName(p.supervisorId),\n                _id: p._id\n              };\n              projectList.push(nextProject);\n            }\n          }\n        }\n      });\n      return projectList;\n    }\n  }, {\n    key: \"_getSupervisorFilterLookup\",\n    value: function _getSupervisorFilterLookup() {\n      var supervisors = this.state.supervisors;\n      var supervisorList = {};\n      supervisors.forEach(function (sp) {\n        var name = sp.firstName + \" \" + sp.lastName;\n\n        if (!(name in supervisorList)) {\n          supervisorList[name] = name;\n        }\n      });\n      return supervisorList;\n    }\n  }, {\n    key: \"_getSubjectFilterLookup\",\n    value: function _getSubjectFilterLookup() {\n      var projects = this.state.projects;\n      var subjectList = {};\n      projects.forEach(function (p) {\n        // First check if valid\n        if ('proposal' in p) {\n          if ('client' in p.proposal) {\n            if ('organisation' in p.proposal.client) {\n              if (!(p.subjectId in subjectList)) {\n                subjectList[p.subjectId] = p.subjectId;\n              }\n            }\n          }\n        }\n      });\n      return subjectList;\n    } // Rediret to ProjectById page\n\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick(_id) {\n      var history = this.props.history;\n      history.push(\"/dashboard/projects/\".concat(_id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(MaterialTable, {\n        title: \"All Projects\",\n        columns: [{\n          title: 'Year',\n          field: 'year',\n          filterCellStyle: {\n            maxWidth: 50\n          }\n        }, {\n          title: 'Project Name',\n          field: 'name'\n        }, {\n          title: 'Client',\n          field: 'client'\n        }, {\n          title: 'Description',\n          field: 'outlineOfProject',\n          filtering: false\n        }, {\n          title: 'Status',\n          field: 'status',\n          lookup: {\n            new: 'New',\n            inProgress: 'In Progress',\n            completed: 'Completed'\n          },\n          filterCellStyle: {\n            paddingTop: 0\n          }\n        }, _defineProperty({\n          title: 'Subject',\n          field: 'subjectId',\n          filterCellStyle: {\n            maxWidth: 50\n          },\n          lookup: this._getSubjectFilterLookup()\n        }, \"filterCellStyle\", {\n          paddingTop: 0\n        }), {\n          title: 'Supervisor',\n          field: 'supervisor',\n          lookup: this._getSupervisorFilterLookup(),\n          filterCellStyle: {\n            paddingTop: 0\n          }\n        }],\n        data: this._formatDataIntoTableList(),\n        options: {\n          filtering: true,\n          exportButton: true\n        },\n        onRowClick: function onRowClick(event, rowData) {\n          return _this3._handleClick(rowData._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AllClients;\n}(PureComponent);\n\nexport default AllClients;","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Client\\AllClients.js"],"names":["React","PureComponent","store","getAllClients","getAllClientsAction","MaterialTable","AllClients","props","_showSupervisorName","supervisorId","supervisors","state","supervisorName","forEach","sp","_id","firstName","lastName","getState","_handleStoreChange","bind","subscribe","setState","getProjectList","projects","getAllProjectAct","getAllProjectAction","dispatch","getSupervisors","getSupervisorsAct","getSupervisorsAction","getAllSubjects","subjects","getAllSubjectsAct","getAllSubjectsAction","_reqTodoList","nextProps","console","log","currentPage","str","split","projectList","p","proposal","client","nextProject","year","_extractYear","date","name","outlineOfProject","status","subjectId","supervisor","push","supervisorList","subjectList","history","title","field","filterCellStyle","maxWidth","filtering","lookup","new","inProgress","completed","paddingTop","_getSubjectFilterLookup","_getSupervisorFilterLookup","_formatDataIntoTableList","exportButton","event","rowData","_handleClick"],"mappings":"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","sourcesContent":["/**\r\n * This component contains all clients. It is entered via the \"View Clients\" link on the app drawer.\r\n * Author: Reyna Tan\r\n * Date: 09/10/2019\r\n */\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport store from \"../../../../store\";\r\nimport {getAllClients} from \"../../../../api\";\r\nimport {\r\n    getAllClientsAction,\r\n} from \"../../../../store/actionCreators\";\r\nimport MaterialTable from 'material-table';\r\n\r\nclass AllClients extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = store.getState();\r\n\r\n        this._handleStoreChange = this._handleStoreChange.bind(this);\r\n        store.subscribe(this._handleStoreChange);\r\n    }\r\n\r\n    _handleStoreChange() {\r\n        this.setState(store.getState());\r\n    }\r\n\r\n    async _reqTodoList() {\r\n        const projects = await getProjectList();\r\n        const getAllProjectAct = getAllProjectAction(projects);\r\n        store.dispatch(getAllProjectAct);\r\n\r\n        const supervisors = await getSupervisors();\r\n        const getSupervisorsAct = getSupervisorsAction(supervisors);\r\n        store.dispatch(getSupervisorsAct);\r\n\r\n        const subjects = await getAllSubjects();\r\n        const getAllSubjectsAct = getAllSubjectsAction(subjects);\r\n        store.dispatch(getAllSubjectsAct);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._reqTodoList();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.currentPage);\r\n    }\r\n\r\n    _extractYear(str) {\r\n        // Format in which the date is stored in the DB: 2019-10-07T03:34:16.921Z\r\n        // Slice the string using \"-\" and extract only the first element\r\n        return str.split(\"-\")[0];\r\n    }\r\n\r\n    _formatDataIntoTableList() {\r\n        const {projects} = this.state;\r\n\r\n        let projectList = [];\r\n\r\n        projects.forEach(p => {\r\n\r\n            // First check if valid\r\n            if ('proposal' in p) {\r\n                if ('client' in p.proposal) {\r\n                    if ('organisation' in p.proposal.client) {\r\n                        let nextProject = {\r\n                            year: this._extractYear(p.date),\r\n                            name: p.name,\r\n                            client: p.proposal.client.firstName + \" \" + p.proposal.client.lastName,\r\n                            outlineOfProject: p.proposal.outlineOfProject,\r\n                            status: p.status,\r\n                            subjectId: p.subjectId,\r\n                            supervisor: this._showSupervisorName(p.supervisorId),\r\n                            _id: p._id\r\n                        }\r\n            \r\n                        projectList.push(nextProject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        })\r\n\r\n        return projectList;\r\n    }\r\n\r\n    _showSupervisorName = (supervisorId) => {\r\n        const {supervisors} = this.state;\r\n        let supervisorName = \" \";\r\n        supervisors.forEach(sp => {\r\n            if (sp._id === supervisorId) {\r\n                supervisorName = sp.firstName + \" \" + sp.lastName;\r\n            }\r\n        });\r\n        return supervisorName;\r\n    };\r\n\r\n    _getSupervisorFilterLookup() {\r\n        const {supervisors} = this.state;\r\n\r\n        let supervisorList = {};\r\n\r\n        supervisors.forEach(sp => {\r\n            let name = sp.firstName + \" \" + sp.lastName;\r\n\r\n            if (! (name in supervisorList)) {\r\n                supervisorList[name] = name;\r\n            }\r\n        })\r\n\r\n        return supervisorList;\r\n    }\r\n\r\n    _getSubjectFilterLookup() {\r\n        const {projects} = this.state;\r\n\r\n        let subjectList = {};\r\n\r\n        projects.forEach(p => {\r\n\r\n            // First check if valid\r\n            if ('proposal' in p) {\r\n                if ('client' in p.proposal) {\r\n                    if ('organisation' in p.proposal.client) {\r\n                        if (! (p.subjectId in subjectList)) {\r\n                            subjectList[p.subjectId] = p.subjectId;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        })\r\n\r\n        return subjectList;\r\n    }\r\n\r\n    // Rediret to ProjectById page\r\n    _handleClick(_id) {\r\n        const { history } = this.props;\r\n        history.push(`/dashboard/projects/${_id}`);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <MaterialTable\r\n                title=\"All Projects\"\r\n                columns={[\r\n                    { title: 'Year', field: 'year', filterCellStyle:{maxWidth:50} },\r\n                    { title: 'Project Name', field: 'name' },\r\n                    { title: 'Client', field: 'client' },\r\n                    { title: 'Description', field: 'outlineOfProject', filtering: false },\r\n                    { title: 'Status', field: 'status', lookup: { new: 'New', inProgress: 'In Progress', completed: 'Completed'}, filterCellStyle:{paddingTop:0} },\r\n                    { title: 'Subject', field: 'subjectId', filterCellStyle:{maxWidth:50}, lookup: this._getSubjectFilterLookup(), filterCellStyle:{paddingTop:0} },\r\n                    { title: 'Supervisor', field: 'supervisor', lookup: this._getSupervisorFilterLookup(), filterCellStyle:{paddingTop:0} },\r\n                ]}\r\n                data={this._formatDataIntoTableList()}\r\n                options={{\r\n                    filtering: true,\r\n                    exportButton: true,\r\n                }}\r\n                onRowClick={(event, rowData) => this._handleClick(rowData._id)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default (AllClients);"]},"metadata":{},"sourceType":"module"}