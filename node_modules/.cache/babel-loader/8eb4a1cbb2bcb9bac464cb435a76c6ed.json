{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Reyna\\\\Documents\\\\GitHub\\\\SWEN90013\\\\src\\\\components\\\\dashboard\\\\Notes\\\\SingleNote.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Grid from \"@material-ui/core/Grid\";\nvar SUMMARY_LENGTH = 10;\n\nvar styles = function styles(theme) {\n  return {\n    expansionPanel: {\n      borderRadius: 5,\n      marginBottom: 7\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    }\n  };\n};\n\nvar SingleNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SingleNote, _React$Component);\n\n  function SingleNote(props) {\n    var _this;\n\n    _classCallCheck(this, SingleNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleNote).call(this, props));\n    _this.state = {\n      open: false\n    };\n    return _this;\n  } // Convert dates from integers to string\n\n\n  _createClass(SingleNote, [{\n    key: \"_convertDate\",\n    value: function _convertDate(dateInt) {\n      // Dates are sent as integer representations of dates e.g. '1568340623387'\n      // Converting them as strings give 'Fri Sep 13 2019 12:10:23 GMT+1000 (Australian Eastern Standard Time)'\n      var dateObj = Date(dateInt); // Split string into array of separate words and use only what is required\n\n      var dateList = dateObj.split(\" \");\n      var day = dateList[2];\n      var month = dateList[1];\n      var year = dateList[3];\n      return day + \" \" + month + \" \" + year;\n    } // Shortens the given note into a set length to display \n\n  }, {\n    key: \"_shortenText\",\n    value: function _shortenText(text) {\n      var output = text.split(\" \"); // If text exceeds SUMMARY_LENGTH, take the first SUMMARY_LENGTH bits \n\n      if (output.length > SUMMARY_LENGTH) {\n        output = output.slice(0, SUMMARY_LENGTH);\n        output.push(\"...\");\n      }\n\n      output = output.join(\" \");\n      return output;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          note = _this$props.note,\n          classes = _this$props.classes;\n      return React.createElement(ExpansionPanel, {\n        className: classes.expansionPanel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        \"aria-controls\": \"panel1a-content\",\n        id: \"panel1a-header\",\n        className: classes.expansionPanelSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this._shortenText(note.text))), React.createElement(Grid, {\n        item: true,\n        xs: true,\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Commented at \" + this._convertDate(note.date))))), React.createElement(ExpansionPanelDetails, {\n        className: classes.expansionPanelDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, note.text)));\n    }\n  }]);\n\n  return SingleNote;\n}(React.Component);\n\nSingleNote.propTypes = {\n  classes: PropTypes.object.isRequired,\n  note: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SingleNote);","map":{"version":3,"sources":["C:\\Users\\Reyna\\Documents\\GitHub\\SWEN90013\\src\\components\\dashboard\\Notes\\SingleNote.js"],"names":["React","PropTypes","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","Grid","SUMMARY_LENGTH","styles","theme","expansionPanel","borderRadius","marginBottom","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","SingleNote","props","state","open","dateInt","dateObj","Date","dateList","split","day","month","year","text","output","length","slice","push","join","note","classes","expansionPanelSummary","font","_shortenText","_convertDate","date","expansionPanelDetails","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst SUMMARY_LENGTH = 10;\r\n\r\nconst styles = theme => ({\r\n    expansionPanel: {\r\n        borderRadius: 5,\r\n        marginBottom: 7,\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n          duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n        transform: \"rotate(180deg)\"\r\n    },\r\n});\r\n\r\nclass SingleNote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n        }\r\n    }\r\n\r\n    // Convert dates from integers to string\r\n    _convertDate(dateInt) {\r\n        // Dates are sent as integer representations of dates e.g. '1568340623387'\r\n        // Converting them as strings give 'Fri Sep 13 2019 12:10:23 GMT+1000 (Australian Eastern Standard Time)'\r\n        var dateObj = Date(dateInt);\r\n        // Split string into array of separate words and use only what is required\r\n        var dateList = dateObj.split(\" \");\r\n        let day = dateList[2];\r\n        let month = dateList[1];\r\n        let year = dateList[3];\r\n        return (day + \" \" + month + \" \" + year);\r\n    }\r\n\r\n    // Shortens the given note into a set length to display \r\n    _shortenText(text) {\r\n        let output = text.split(\" \");\r\n\r\n        // If text exceeds SUMMARY_LENGTH, take the first SUMMARY_LENGTH bits \r\n        if (output.length > SUMMARY_LENGTH) {\r\n            output = output.slice(0, SUMMARY_LENGTH);\r\n            output.push(\"...\");\r\n        }\r\n        output = output.join(\" \");\r\n        \r\n        return output\r\n    }\r\n\r\n    render() {\r\n        const {note, classes} = this.props;\r\n\r\n        return (\r\n            <ExpansionPanel className={classes.expansionPanel}>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    className={classes.expansionPanelSummary}\r\n                >\r\n                    <Grid container spacing={24}>\r\n                        <Grid item xs>\r\n                            <Typography className={classes.font}>\r\n                                {this._shortenText(note.text)}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs align=\"right\">\r\n                            <Typography className={classes.font}>\r\n                                {\"Commented at \"+this._convertDate(note.date)}\r\n                            </Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\r\n                    <Typography className={classes.font}>\r\n                        {note.text}\r\n                    </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSingleNote.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    note: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SingleNote);"]},"metadata":{},"sourceType":"module"}